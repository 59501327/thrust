{
  "abstract": false,
  "anchor": "",
  "brief": "A <code>linear&#95;congruential&#95;engine</code> random number engine produces unsigned integer random numbers using a linear congruential random number generation algorithm. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "The generation algorithm has the form <code>x&#95;i = (a &#42; x&#95;{i-1} + c) mod m</code>.\n\n\nThe following code snippet shows examples of use of a <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a></code> instance:\n\n\n\n```cpp\n#include <thrust/random/linear_congruential_engine.h>\n#include <iostream>\n\nint main(void)\n{\n  // create a minstd_rand object, which is an instance of linear_congruential_engine\n  thrust::minstd_rand rng1;\n\n  // output some random values to cout\n  std::cout << rng1() << std::endl;\n\n  // a random value is printed\n\n  // create a new minstd_rand from a seed\n  thrust::minstd_rand rng2(13);\n\n  // discard some random values\n  rng2.discard(13);\n\n  // stream the object to an iostream\n  std::cout << rng2 << std::endl;\n\n  // rng2's current state is printed\n\n  // print the minimum and maximum values that minstd_rand can produce\n  std::cout << thrust::minstd_rand::min << std::endl;\n  std::cout << thrust::minstd_rand::max << std::endl;\n\n  // the range of minstd_rand is printed\n\n  // save the state of rng2 to a different object\n  thrust::minstd_rand rng3 = rng2;\n\n  // compare rng2 and rng3\n  std::cout << (rng2 == rng3) << std::endl;\n\n  // 1 is printed\n\n  // re-seed rng2 with a different seed\n  rng2.seed(7);\n\n  // compare rng2 and rng3\n  std::cout << (rng2 == rng3) << std::endl;\n\n  // 0 is printed\n\n  return 0;\n}\n```",
  "explicit": false,
  "fullname": "random::linear_congruential_engine",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/random/linear_congruential_engine.h>",
  "inline": false,
  "kind": "class",
  "location": {
    "bodyEnd": 205,
    "bodyFile": "thrust/random/linear_congruential_engine.h",
    "bodyStart": 112,
    "column": 1,
    "file": "thrust/random/linear_congruential_engine.h",
    "line": 113
  },
  "module": {
    "anchor": "",
    "category": "modules",
    "fullname": "random_number_engine_templates",
    "kind": "group",
    "name": "random_number_engine_templates",
    "refid": "group__random__number__engine__templates",
    "title": "Random Number Engine Class Templates",
    "url": "/api/groups/group__random__number__engine__templates.html",
    "visibility": "public"
  },
  "moduleBreadcrumbs": [
    {
      "anchor": "",
      "category": "modules",
      "fullname": "random",
      "kind": "group",
      "name": "random",
      "refid": "group__random",
      "title": "Random Number Generation",
      "url": "/api/groups/group__random.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "random_number_engine_templates",
      "kind": "group",
      "name": "random_number_engine_templates",
      "refid": "group__random__number__engine__templates",
      "title": "Random Number Engine Class Templates",
      "url": "/api/groups/group__random__number__engine__templates.html",
      "visibility": "public"
    }
  ],
  "name": "random::linear_congruential_engine",
  "note": [
    "Inexperienced users should not use this class template directly. Instead, use <code>minstd&#95;rand</code> or <code>minstd&#95;rand0</code>."
  ],
  "override": false,
  "parent": {
    "anchor": "",
    "category": "namespaces",
    "fullname": "random",
    "kind": "namespace",
    "name": "random",
    "refid": "namespacerandom",
    "title": "random",
    "url": "/api/namespaces/namespacerandom.html",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "random",
      "kind": "namespace",
      "name": "random",
      "refid": "namespacerandom",
      "title": "random",
      "url": "/api/namespaces/namespacerandom.html",
      "visibility": "public"
    }
  ],
  "publicAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-multiplier",
      "category": "attributes",
      "const": false,
      "definition": "const result_type random::linear_congruential_engine< UIntType, a, c, m >::multiplier",
      "details": "The multiplier used in the generation algorithm. ",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::multiplier",
      "hasDetails": true,
      "initializer": "= a",
      "inline": false,
      "kind": "variable",
      "location": {
        "bodyFile": "thrust/random/linear_congruential_engine.h",
        "bodyStart": 126,
        "column": 30,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 126
      },
      "name": "multiplier",
      "override": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a32efa92262aa6f066db0b9ca405bcebc",
      "static": true,
      "strong": false,
      "title": "multiplier",
      "type": "const <a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
      "typePlain": "const result_type",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#variable-multiplier",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-increment",
      "category": "attributes",
      "const": false,
      "definition": "const result_type random::linear_congruential_engine< UIntType, a, c, m >::increment",
      "details": "The increment used in the generation algorithm. ",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::increment",
      "hasDetails": true,
      "initializer": "= c",
      "inline": false,
      "kind": "variable",
      "location": {
        "bodyFile": "thrust/random/linear_congruential_engine.h",
        "bodyStart": 130,
        "column": 30,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 130
      },
      "name": "increment",
      "override": false,
      "refid": "classrandom_1_1linear__congruential__engine_1afec0f6e94c0178ed4e889870a20c8c04",
      "static": true,
      "strong": false,
      "title": "increment",
      "type": "const <a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
      "typePlain": "const result_type",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#variable-increment",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-modulus",
      "category": "attributes",
      "const": false,
      "definition": "const result_type random::linear_congruential_engine< UIntType, a, c, m >::modulus",
      "details": "The modulus used in the generation algorithm. ",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::modulus",
      "hasDetails": true,
      "initializer": "= m",
      "inline": false,
      "kind": "variable",
      "location": {
        "bodyFile": "thrust/random/linear_congruential_engine.h",
        "bodyStart": 134,
        "column": 30,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 134
      },
      "name": "modulus",
      "override": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a35bd5c058250f26c59471872cff97914",
      "static": true,
      "strong": false,
      "title": "modulus",
      "type": "const <a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
      "typePlain": "const result_type",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#variable-modulus",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-min",
      "category": "attributes",
      "const": false,
      "definition": "const result_type random::linear_congruential_engine< UIntType, a, c, m >::min",
      "details": "The smallest value this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a></code> may potentially produce. ",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::min",
      "hasDetails": true,
      "initializer": "= c == 0u ? 1u : 0u",
      "inline": false,
      "kind": "variable",
      "location": {
        "bodyFile": "thrust/random/linear_congruential_engine.h",
        "bodyStart": 138,
        "column": 30,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 138
      },
      "name": "min",
      "override": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a445ca0c5450f3596e88e40de2d9b89ba",
      "static": true,
      "strong": false,
      "title": "min",
      "type": "const <a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
      "typePlain": "const result_type",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#variable-min",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-max",
      "category": "attributes",
      "const": false,
      "definition": "const result_type random::linear_congruential_engine< UIntType, a, c, m >::max",
      "details": "The largest value this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a></code> may potentially produce. ",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::max",
      "hasDetails": true,
      "initializer": "= m - 1u",
      "inline": false,
      "kind": "variable",
      "location": {
        "bodyFile": "thrust/random/linear_congruential_engine.h",
        "bodyStart": 142,
        "column": 30,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 142
      },
      "name": "max",
      "override": false,
      "refid": "classrandom_1_1linear__congruential__engine_1ab75b85313a25dd881e63b39a9a83ddf7",
      "static": true,
      "strong": false,
      "title": "max",
      "type": "const <a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
      "typePlain": "const result_type",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#variable-max",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#variable-default_seed",
      "category": "attributes",
      "const": false,
      "definition": "const result_type random::linear_congruential_engine< UIntType, a, c, m >::default_seed",
      "details": "The default seed of this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a></code>. ",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::default_seed",
      "hasDetails": true,
      "initializer": "= 1u",
      "inline": false,
      "kind": "variable",
      "location": {
        "bodyFile": "thrust/random/linear_congruential_engine.h",
        "bodyStart": 146,
        "column": 30,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 146
      },
      "name": "default_seed",
      "override": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a1b4d2df6b7da7439e1c12925d9cff4ce",
      "static": true,
      "strong": false,
      "title": "default_seed",
      "type": "const <a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
      "typePlain": "const result_type",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#variable-default_seed",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-linear_congruential_engine",
      "argsString": "(result_type s=default_seed)",
      "category": "functions",
      "const": false,
      "default": true,
      "definition": "__host__ __device__ random::linear_congruential_engine< UIntType, a, c, m >::linear_congruential_engine",
      "deleted": false,
      "details": "This constructor, which optionally accepts a seed, initializes a new <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a></code>.",
      "explicit": true,
      "fullname": "random::linear_congruential_engine::linear_congruential_engine",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 14,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 156
      },
      "name": "linear_congruential_engine",
      "override": false,
      "paramList": [
        {
          "name": "s",
          "text": "The seed used to intialize this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a>'s</code> state. "
        }
      ],
      "params": [
        {
          "defval": "<a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#variable-default_seed\">default_seed</a>",
          "defvalPlain": "default_seed",
          "name": "s",
          "type": "<a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
          "typePlain": "result_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a7ba531f74978777a6aabf43c508970e6",
      "static": false,
      "strong": false,
      "title": "linear_congruential_engine",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#function-linear_congruential_engine",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-seed",
      "argsString": "(result_type s=default_seed)",
      "category": "functions",
      "const": false,
      "default": true,
      "definition": "__host__ __device__ void random::linear_congruential_engine< UIntType, a, c, m >::seed",
      "deleted": false,
      "details": "This method initializes this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a>'s</code> state, and optionally accepts a seed value.",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::seed",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 10,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 164
      },
      "name": "seed",
      "override": false,
      "paramList": [
        {
          "name": "s",
          "text": "The seed used to initializes this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a>'s</code> state. "
        }
      ],
      "params": [
        {
          "defval": "<a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#variable-default_seed\">default_seed</a>",
          "defvalPlain": "default_seed",
          "name": "s",
          "type": "<a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
          "typePlain": "result_type"
        }
      ],
      "pureVirtual": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a5aaf5f4a6006183a9138e0315227324d",
      "static": false,
      "strong": false,
      "title": "seed",
      "type": "__host__ __device__ void",
      "typePlain": "__host__ __device__ void",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#function-seed",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator()",
      "argsString": "(void)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ result_type random::linear_congruential_engine< UIntType, a, c, m >::operator()",
      "deleted": false,
      "details": "This member function produces a new random value and updates this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a>'s</code> state. ",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::operator()",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 17,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 172
      },
      "name": "operator()",
      "override": false,
      "params": [
        {
          "name": "",
          "type": "void",
          "typePlain": "void"
        }
      ],
      "pureVirtual": false,
      "refid": "classrandom_1_1linear__congruential__engine_1aadaa4779e55e301ff38307fe37697a9e",
      "returns": [
        "A new random number. "
      ],
      "static": false,
      "strong": false,
      "title": "operator()",
      "type": "__host__ __device__ <a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type\">result_type</a>",
      "typePlain": "__host__ __device__ result_type",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#function-operator()",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-discard",
      "argsString": "(unsigned long long z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ void random::linear_congruential_engine< UIntType, a, c, m >::discard",
      "deleted": false,
      "details": "This member function advances this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a>'s</code> state a given number of times and discards the results.",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::discard",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 10,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 181
      },
      "name": "discard",
      "note": [
        "This function is provided because an implementation may be able to accelerate it. "
      ],
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The number of random values to discard. "
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "unsigned long long",
          "typePlain": "unsigned long long"
        }
      ],
      "pureVirtual": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a6caf974d56e7f0bfbec76566107485d7",
      "static": false,
      "strong": false,
      "title": "discard",
      "type": "__host__ __device__ void",
      "typePlain": "__host__ __device__ void",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#function-discard",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#typedef-result_type",
      "brief": "The type of the unsigned integer produced by this <code><a href=\"/api/classes/classrandom_1_1linear__congruential__engine.html\">linear&#95;congruential&#95;engine</a></code>. ",
      "category": "types",
      "const": false,
      "definition": "random::linear_congruential_engine< UIntType, a, c, m >::result_type",
      "explicit": false,
      "fullname": "random::linear_congruential_engine::result_type",
      "hasDetails": false,
      "inline": false,
      "kind": "typedef",
      "location": {
        "bodyFile": "thrust/random/linear_congruential_engine.h",
        "bodyStart": 120,
        "column": 22,
        "file": "thrust/random/linear_congruential_engine.h",
        "line": 120
      },
      "name": "result_type",
      "override": false,
      "refid": "classrandom_1_1linear__congruential__engine_1a8d541f62fa4397bfd98065908b200c37",
      "static": false,
      "strong": false,
      "summary": "The type of the unsigned integer produced by this linear_congruential_engine. ",
      "title": "result_type",
      "type": "UIntType",
      "typePlain": "UIntType",
      "url": "/api/classes/classrandom_1_1linear__congruential__engine.html#typedef-result_type",
      "visibility": "public"
    }
  ],
  "refid": "classrandom_1_1linear__congruential__engine",
  "see": [
    "thrust::random::minstd_rand ",
    "thrust::random::minstd_rand0 "
  ],
  "static": false,
  "strong": false,
  "summary": "A linear_congruential_engine random number engine produces unsigned integer random numbers using a linear congruential random number generation algorithm. ",
  "templateParams": [
    {
      "name": "",
      "type": "typename UIntType",
      "typePlain": "typename UIntType"
    },
    {
      "name": "a",
      "type": "UIntType",
      "typePlain": "UIntType"
    },
    {
      "name": "c",
      "type": "UIntType",
      "typePlain": "UIntType"
    },
    {
      "name": "m",
      "type": "UIntType",
      "typePlain": "UIntType"
    }
  ],
  "templateParamsList": [
    {
      "name": "UIntType",
      "text": "The type of unsigned integer to produce. "
    },
    {
      "name": "a",
      "text": "The multiplier used in the generation algorithm. "
    },
    {
      "name": "c",
      "text": "The increment used in the generation algorithm. "
    },
    {
      "name": "m",
      "text": "The modulus used in the generation algorithm."
    }
  ],
  "title": "random::linear_congruential_engine",
  "url": "/api/classes/classrandom_1_1linear__congruential__engine.html",
  "visibility": "public"
}