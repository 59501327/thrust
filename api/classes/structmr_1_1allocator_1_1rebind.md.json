{
  "abstract": false,
  "anchor": "",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "The <code>rebind</code> metafunction provides the type of an <code>allocator</code> instantiated with another type.",
  "explicit": false,
  "fullname": "mr::allocator::rebind",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/mr/allocator.h>",
  "inline": false,
  "kind": "struct",
  "location": {
    "bodyEnd": 90,
    "bodyFile": "thrust/mr/allocator.h",
    "bodyStart": 85,
    "column": 1,
    "file": "thrust/mr/allocator.h",
    "line": 86
  },
  "name": "mr::allocator::rebind",
  "override": false,
  "parent": {
    "anchor": "",
    "baseClasses": [
      {
        "external": true,
        "name": "mr::validator< MR >",
        "virtual": "non-virtual",
        "visibility": "private"
      }
    ],
    "category": "classes",
    "fullname": "mr::allocator",
    "kind": "class",
    "name": "mr::allocator",
    "refid": "classmr_1_1allocator",
    "title": "mr::allocator",
    "url": "/api/classes/classmr_1_1allocator.html",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "brief": "<code>thrust::mr</code> is the namespace containing system agnostic types and functions for <code>memory&#95;resource</code> related functionalities. ",
      "category": "namespaces",
      "fullname": "mr",
      "kind": "namespace",
      "name": "mr",
      "refid": "namespacemr",
      "summary": "thrust::mr is the namespace containing system agnostic types and functions for memory_resource related functionalities. ",
      "title": "mr",
      "url": "/api/namespaces/namespacemr.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "mr::validator< MR >",
          "virtual": "non-virtual",
          "visibility": "private"
        }
      ],
      "category": "classes",
      "fullname": "mr::allocator",
      "kind": "class",
      "name": "mr::allocator",
      "refid": "classmr_1_1allocator",
      "title": "mr::allocator",
      "url": "/api/classes/classmr_1_1allocator.html",
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#typedef-other",
      "category": "types",
      "const": false,
      "definition": "typedef allocator<U, MR> mr::allocator< T, MR >::rebind< U >::other",
      "details": "The typedef <code>other</code> gives the type of the rebound <code>allocator</code>. ",
      "explicit": false,
      "fullname": "mr::allocator::rebind::other",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "location": {
        "bodyFile": "thrust/mr/allocator.h",
        "bodyStart": 89,
        "column": 27,
        "file": "thrust/mr/allocator.h",
        "line": 89
      },
      "name": "other",
      "override": false,
      "refid": "structmr_1_1allocator_1_1rebind_1a6667b04ecbb64b6afb483a026ceed81d",
      "static": false,
      "strong": false,
      "title": "other",
      "type": "<a href=\"/api/classes/classmr_1_1allocator.html\">allocator</a>< U, MR >",
      "typePlain": "allocator< U, MR >",
      "url": "/api/classes/structmr_1_1allocator_1_1rebind.html#typedef-other",
      "visibility": "public"
    }
  ],
  "refid": "structmr_1_1allocator_1_1rebind",
  "static": false,
  "strong": false,
  "templateParams": [
    {
      "name": "",
      "type": "typename U",
      "typePlain": "typename U"
    }
  ],
  "templateParamsList": [
    {
      "name": "U",
      "text": "the other type to use for instantiation. "
    }
  ],
  "title": "mr::allocator::rebind",
  "url": "/api/classes/structmr_1_1allocator_1_1rebind.html",
  "visibility": "public"
}