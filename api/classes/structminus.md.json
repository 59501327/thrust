{
  "abstract": false,
  "anchor": "",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "<code>minus</code> is a function object. Specifically, it is an Adaptable Binary Function. If <code>f</code> is an object of class <code>minus&lt;T&gt;</code>, and <code>x</code> and <code>y</code> are objects of class <code>T</code>, then <code>f(x,y)</code> returns <code>x-y</code>.\n\n\nThe following code snippet demonstrates how to use <code>minus</code> to subtract a <a href=\"/thrust/api/classes/classdevice__vector.html\">device_vector</a> of <code>floats</code> from another.\n\n\n\n```cpp\n#include <thrust/device_vector.h>\n#include <thrust/functional.h>\n#include <thrust/sequence.h>\n#include <thrust/fill.h>\n#include <thrust/transform.h>\n...\nconst int N = 1000;\nthrust::device_vector<float> V1(N);\nthrust::device_vector<float> V2(N);\nthrust::device_vector<float> V3(N);\n\nthrust::sequence(V1.begin(), V1.end(), 1);\nthrust::fill(V2.begin(), V2.end(), 75);\n\nthrust::transform(V1.begin(), V1.end(), V2.begin(), V3.begin(),\n                  thrust::minus<float>());\n// V3 is now {-74, -73, -72, ..., 925}\n```",
  "explicit": false,
  "fullname": "minus",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/functional.h>",
  "inline": false,
  "kind": "struct",
  "location": {
    "bodyEnd": 298,
    "bodyFile": "thrust/functional.h",
    "bodyStart": 273,
    "column": 1,
    "file": "thrust/functional.h",
    "line": 274
  },
  "module": {
    "anchor": "",
    "category": "modules",
    "fullname": "arithmetic_operations",
    "kind": "group",
    "name": "arithmetic_operations",
    "refid": "group__arithmetic__operations",
    "title": "Arithmetic Operations",
    "url": "/thrust/api/groups/group__arithmetic__operations.html",
    "visibility": "public"
  },
  "moduleBreadcrumbs": [
    {
      "anchor": "",
      "category": "modules",
      "fullname": "function_objects",
      "kind": "group",
      "name": "function_objects",
      "refid": "group__function__objects",
      "title": "Function Objects",
      "url": "/thrust/api/groups/group__function__objects.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "predefined_function_objects",
      "kind": "group",
      "name": "predefined_function_objects",
      "refid": "group__predefined__function__objects",
      "title": "Predefined Function Objects",
      "url": "/thrust/api/groups/group__predefined__function__objects.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "arithmetic_operations",
      "kind": "group",
      "name": "arithmetic_operations",
      "refid": "group__arithmetic__operations",
      "title": "Arithmetic Operations",
      "url": "/thrust/api/groups/group__arithmetic__operations.html",
      "visibility": "public"
    }
  ],
  "name": "minus",
  "override": false,
  "parent": null,
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-operator()",
      "argsString": "(const T &lhs, const T &rhs) const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__thrust_exec_check_disable__ __host__ constexpr __device__ T minus< T >::operator()",
      "deleted": false,
      "details": "Function call operator. The return value is <code>lhs - rhs</code>. ",
      "explicit": false,
      "fullname": "minus::operator()",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 297,
        "bodyFile": "thrust/functional.h",
        "bodyStart": 294,
        "column": 15,
        "file": "thrust/functional.h",
        "line": 294
      },
      "name": "operator()",
      "override": false,
      "params": [
        {
          "name": "lhs",
          "type": "const T &",
          "typePlain": "const T &"
        },
        {
          "name": "rhs",
          "type": "const T &",
          "typePlain": "const T &"
        }
      ],
      "pureVirtual": false,
      "refid": "structminus_1ae547478849c5f4fb4a5b63b323f2bf60",
      "static": false,
      "strong": false,
      "title": "operator()",
      "type": "__thrust_exec_check_disable__ __host__ constexpr __device__ T",
      "typePlain": "__thrust_exec_check_disable__ __host__ constexpr __device__ T",
      "url": "/thrust/api/classes/structminus.html#function-operator()",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#typedef-first_argument_type",
      "brief": "The type of the function object's first argument. ",
      "category": "types",
      "const": false,
      "definition": "minus< T >::first_argument_type",
      "explicit": false,
      "fullname": "minus::first_argument_type",
      "hasDetails": false,
      "inline": false,
      "kind": "typedef",
      "location": {
        "bodyFile": "thrust/functional.h",
        "bodyStart": 278,
        "column": 13,
        "file": "thrust/functional.h",
        "line": 278
      },
      "name": "first_argument_type",
      "override": false,
      "refid": "structminus_1a1ab383723c483ea3a300598dc714850c",
      "static": false,
      "strong": false,
      "summary": "The type of the function object's first argument. ",
      "title": "first_argument_type",
      "type": "T",
      "typePlain": "T",
      "url": "/thrust/api/classes/structminus.html#typedef-first_argument_type",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-second_argument_type",
      "brief": "The type of the function object's second argument. ",
      "category": "types",
      "const": false,
      "definition": "minus< T >::second_argument_type",
      "explicit": false,
      "fullname": "minus::second_argument_type",
      "hasDetails": false,
      "inline": false,
      "kind": "typedef",
      "location": {
        "bodyFile": "thrust/functional.h",
        "bodyStart": 283,
        "column": 13,
        "file": "thrust/functional.h",
        "line": 283
      },
      "name": "second_argument_type",
      "override": false,
      "refid": "structminus_1a0b35dbc2df2e05be2cc646bbc1eba6e2",
      "static": false,
      "strong": false,
      "summary": "The type of the function object's second argument. ",
      "title": "second_argument_type",
      "type": "T",
      "typePlain": "T",
      "url": "/thrust/api/classes/structminus.html#typedef-second_argument_type",
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#typedef-result_type",
      "brief": "The type of the function object's result;. ",
      "category": "types",
      "const": false,
      "definition": "minus< T >::result_type",
      "explicit": false,
      "fullname": "minus::result_type",
      "hasDetails": false,
      "inline": false,
      "kind": "typedef",
      "location": {
        "bodyFile": "thrust/functional.h",
        "bodyStart": 288,
        "column": 13,
        "file": "thrust/functional.h",
        "line": 288
      },
      "name": "result_type",
      "override": false,
      "refid": "structminus_1a1728cb1c48be4c991b0ab31ee1e029ca",
      "static": false,
      "strong": false,
      "summary": "The type of the function object's result;. ",
      "title": "result_type",
      "type": "T",
      "typePlain": "T",
      "url": "/thrust/api/classes/structminus.html#typedef-result_type",
      "visibility": "public"
    }
  ],
  "refid": "structminus",
  "see": [
    "<a href=\"https://en.cppreference.com/w/cpp/utility/functional/minus\">https://en.cppreference.com/w/cpp/utility/functional/minus</a>",
    "<a href=\"/thrust/api/classes/structbinary__function.html\">binary_function</a>"
  ],
  "static": false,
  "strong": false,
  "templateParams": [
    {
      "defval": "void",
      "defvalPlain": "void",
      "name": "",
      "type": "typename T",
      "typePlain": "typename T"
    }
  ],
  "templateParamsList": [
    {
      "name": "T",
      "text": "is a model of <a href=\"https://en.cppreference.com/w/cpp/named_req/CopyAssignable\">Assignable</a>, and if <code>x</code> and <code>y</code> are objects of type <code>T</code>, then <code>x-y</code> must be defined and must have a return type that is convertible to <code>T</code>."
    }
  ],
  "title": "minus",
  "url": "/thrust/api/classes/structminus.html",
  "visibility": "public"
}