{
  "abstract": false,
  "anchor": "",
  "brief": "<a href=\"https://en.cppreference.com/w/cpp/types/integral_constant\"><code>std::integral&#95;constant</code></a> whose value is <code>(... && Bs)</code>. ",
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "conjunction_value",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/type_traits/logical_metafunctions.h>",
  "inline": false,
  "kind": "struct",
  "location": {
    "bodyFile": "thrust/type_traits/logical_metafunctions.h",
    "bodyStart": 176,
    "column": 1,
    "file": "thrust/type_traits/logical_metafunctions.h",
    "line": 176
  },
  "module": {
    "anchor": "",
    "category": "modules",
    "fullname": "type_traits",
    "kind": "group",
    "name": "type_traits",
    "refid": "group__type__traits",
    "title": "Type Traits",
    "url": "/thrust/api/groups/group__type__traits.html",
    "visibility": "public"
  },
  "moduleBreadcrumbs": [
    {
      "anchor": "",
      "category": "modules",
      "fullname": "utility",
      "kind": "group",
      "name": "utility",
      "refid": "group__utility",
      "title": "Utility",
      "url": "/thrust/api/groups/group__utility.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "type_traits",
      "kind": "group",
      "name": "type_traits",
      "refid": "group__type__traits",
      "title": "Type Traits",
      "url": "/thrust/api/groups/group__type__traits.html",
      "visibility": "public"
    }
  ],
  "name": "conjunction_value",
  "override": false,
  "parent": null,
  "refid": "structconjunction__value",
  "see": [
    "<a href=\"/thrust/api/groups/group__type__traits.html#variable-conjunction_value_v\">conjunction_value_v</a>",
    "<a href=\"/thrust/api/groups/group__type__traits.html#using-conjunction\">conjunction</a>",
    "<a href=\"https://en.cppreference.com/w/cpp/types/conjunction\"><code>std::conjunction</code></a>"
  ],
  "static": false,
  "strong": false,
  "summary": "std::integral_constant whose value is (... && Bs). ",
  "templateParams": [
    {
      "name": "Bs",
      "type": "bool...",
      "typePlain": "bool..."
    }
  ],
  "title": "conjunction_value",
  "url": "/thrust/api/classes/structconjunction__value.html",
  "visibility": "public"
}