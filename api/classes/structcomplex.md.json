{
  "abstract": false,
  "anchor": "",
  "category": "classes",
  "const": false,
  "definition": "",
  "details": "<code>complex</code> is the Thrust equivalent to <code>std::complex</code>. It is functionally identical to it, but can also be used in device code which <code>std::complex</code> currently cannot.",
  "explicit": false,
  "fullname": "complex",
  "hasAdditionalMembers": false,
  "hasDetails": true,
  "includes": "<thrust/complex.h>",
  "inline": false,
  "kind": "struct",
  "location": {
    "bodyEnd": 460,
    "bodyFile": "thrust/complex.h",
    "bodyStart": 154,
    "column": 1,
    "file": "thrust/complex.h",
    "line": 155
  },
  "module": {
    "anchor": "",
    "category": "modules",
    "fullname": "complex_numbers",
    "kind": "group",
    "name": "complex_numbers",
    "refid": "group__complex__numbers",
    "title": "Complex Numbers",
    "url": "/api/groups/group__complex__numbers.html",
    "visibility": "public"
  },
  "moduleBreadcrumbs": [
    {
      "anchor": "",
      "category": "modules",
      "fullname": "numerics",
      "kind": "group",
      "name": "numerics",
      "refid": "group__numerics",
      "title": "Numerics",
      "url": "/api/groups/group__numerics.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "modules",
      "fullname": "complex_numbers",
      "kind": "group",
      "name": "complex_numbers",
      "refid": "group__complex__numbers",
      "title": "Complex Numbers",
      "url": "/api/groups/group__complex__numbers.html",
      "visibility": "public"
    }
  ],
  "name": "complex",
  "override": false,
  "parent": null,
  "privateAttributes": [
    {
      "abstract": false,
      "anchor": "#variable-data",
      "category": "attributes",
      "const": false,
      "definition": "detail::complex_storage<T, sizeof(T) * 2>::type complex< T >::data",
      "explicit": false,
      "fullname": "complex::data",
      "hasDetails": false,
      "inline": false,
      "kind": "variable",
      "location": {
        "bodyFile": "thrust/complex.h",
        "bodyStart": 459,
        "column": 43,
        "file": "thrust/complex.h",
        "line": 459
      },
      "name": "data",
      "override": false,
      "refid": "structcomplex_1a143e794462a9a32c271e71b851dc90dc",
      "static": false,
      "strong": false,
      "title": "data",
      "type": "detail::complex_storage< T, sizeof(T) *2 >::type",
      "typePlain": "detail::complex_storage< T, sizeof(T) *2 >::type",
      "url": "/api/classes/structcomplex.html#variable-data",
      "visibility": "private"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-complex",
      "argsString": "(const T &re)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex< T >::complex",
      "deleted": false,
      "details": "Construct a complex number with an imaginary part of 0.",
      "explicit": false,
      "fullname": "complex::complex",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 3,
        "file": "thrust/complex.h",
        "line": 171
      },
      "name": "complex",
      "override": false,
      "paramList": [
        {
          "name": "re",
          "text": "The real part of the number. "
        }
      ],
      "params": [
        {
          "name": "re",
          "type": "const T &",
          "typePlain": "const T &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a92effc35eb4d7b01b7d762a1605999c0",
      "static": false,
      "strong": false,
      "title": "complex",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "/api/classes/structcomplex.html#function-complex",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-complex",
      "argsString": "(const T &re, const T &im)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex< T >::complex",
      "deleted": false,
      "details": "Construct a complex number from its real and imaginary parts.",
      "explicit": false,
      "fullname": "complex::complex",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 3,
        "file": "thrust/complex.h",
        "line": 179
      },
      "name": "complex",
      "override": false,
      "paramList": [
        {
          "name": "re",
          "text": "The real part of the number. "
        },
        {
          "name": "im",
          "text": "The imaginary part of the number. "
        }
      ],
      "params": [
        {
          "name": "re",
          "type": "const T &",
          "typePlain": "const T &"
        },
        {
          "name": "im",
          "type": "const T &",
          "typePlain": "const T &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ae3b8ca585a312a52a6380ea9b414c8e4",
      "static": false,
      "strong": false,
      "title": "complex",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "/api/classes/structcomplex.html#function-complex",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-complex",
      "argsString": "()=default",
      "category": "functions",
      "const": false,
      "default": true,
      "definition": "complex< T >::complex",
      "deleted": false,
      "details": "Default construct a complex number. ",
      "explicit": false,
      "fullname": "complex::complex",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 3,
        "file": "thrust/complex.h",
        "line": 184
      },
      "name": "complex",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structcomplex_1a74ea0b4d23995a79a278bd7ccca6834e",
      "static": false,
      "strong": false,
      "title": "complex",
      "url": "/api/classes/structcomplex.html#function-complex",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-complex",
      "argsString": "(const complex< T > &z)=default",
      "category": "functions",
      "const": false,
      "default": true,
      "definition": "complex< T >::complex",
      "deleted": false,
      "details": "This copy constructor copies from a <code>complex</code> with a type that is convertible to this <code>complex's</code><code>value&#95;type</code>.",
      "explicit": false,
      "fullname": "complex::complex",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 3,
        "file": "thrust/complex.h",
        "line": 191
      },
      "name": "complex",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from. "
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
          "typePlain": "const complex< T > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ac1a8be1c5b5625d5ce77286aa2faabe1",
      "static": false,
      "strong": false,
      "title": "complex",
      "url": "/api/classes/structcomplex.html#function-complex",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-complex",
      "argsString": "(const complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex< T >::complex",
      "deleted": false,
      "details": "This converting copy constructor copies from a <code>complex</code> with a type that is convertible to this <code>complex's</code><code>value&#95;type</code>.",
      "explicit": false,
      "fullname": "complex::complex",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 3,
        "file": "thrust/complex.h",
        "line": 216
      },
      "name": "complex",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< U > &",
          "typePlain": "const complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ab0a860df529a927ccb9da08707028e8e",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "complex",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "/api/classes/structcomplex.html#function-complex",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-complex",
      "argsString": "(const std::complex< T > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex< T >::complex",
      "deleted": false,
      "details": "This converting copy constructor copies from a <code>std::complex</code> with a type that is convertible to this <code>complex's</code><code>value&#95;type</code>.",
      "explicit": false,
      "fullname": "complex::complex",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 3,
        "file": "thrust/complex.h",
        "line": 224
      },
      "name": "complex",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from. "
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const std::complex< T > &",
          "typePlain": "const std::complex< T > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1adfafa98833b64fd327957d471e6f458e",
      "static": false,
      "strong": false,
      "title": "complex",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "/api/classes/structcomplex.html#function-complex",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-complex",
      "argsString": "(const std::complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex< T >::complex",
      "deleted": false,
      "details": "This converting copy constructor copies from a <code>std::complex</code> with a type that is convertible to this <code>complex's</code><code>value&#95;type</code>.",
      "explicit": false,
      "fullname": "complex::complex",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 3,
        "file": "thrust/complex.h",
        "line": 235
      },
      "name": "complex",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const std::complex< U > &",
          "typePlain": "const std::complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ab745faaef446d2cde8d53443aabcf660",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "complex",
      "type": "__host__ __device__",
      "typePlain": "__host__ __device__",
      "url": "/api/classes/structcomplex.html#function-complex",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const T &re)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex& complex< T >::operator=",
      "deleted": false,
      "details": "Assign <code>re</code> to the real part of this <code>complex</code> and set the imaginary part to 0.",
      "explicit": false,
      "fullname": "complex::operator=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 247
      },
      "name": "operator=",
      "override": false,
      "paramList": [
        {
          "name": "re",
          "text": "The real part of the number. "
        }
      ],
      "params": [
        {
          "name": "re",
          "type": "const T &",
          "typePlain": "const T &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ab3a7478965d53e3d10ba76d664ffa7ea",
      "static": false,
      "strong": false,
      "title": "operator=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a> &",
      "typePlain": "__host__ __device__ complex &",
      "url": "/api/classes/structcomplex.html#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const complex< T > &z)=default",
      "category": "functions",
      "const": false,
      "default": true,
      "definition": "complex& complex< T >::operator=",
      "deleted": false,
      "details": "Assign <code>z.real()</code> and <code>z.imag()</code> to the real and imaginary parts of this <code>complex</code> respectively.",
      "explicit": false,
      "fullname": "complex::operator=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 255
      },
      "name": "operator=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from. "
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
          "typePlain": "const complex< T > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a33b3ac10158eadbcbf8044ff7bdd9339",
      "static": false,
      "strong": false,
      "title": "operator=",
      "type": "<a href=\"/api/classes/structcomplex.html\">complex</a> &",
      "typePlain": "complex &",
      "url": "/api/classes/structcomplex.html#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex& complex< T >::operator=",
      "deleted": false,
      "details": "Assign <code>z.real()</code> and <code>z.imag()</code> to the real and imaginary parts of this <code>complex</code> respectively.",
      "explicit": false,
      "fullname": "complex::operator=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 275
      },
      "name": "operator=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< U > &",
          "typePlain": "const complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ad7bcdcf793a47508f7daed537a98e790",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a> &",
      "typePlain": "__host__ __device__ complex &",
      "url": "/api/classes/structcomplex.html#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const std::complex< T > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex& complex< T >::operator=",
      "deleted": false,
      "details": "Assign <code>z.real()</code> and <code>z.imag()</code> to the real and imaginary parts of this <code>complex</code> respectively.",
      "explicit": false,
      "fullname": "complex::operator=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 283
      },
      "name": "operator=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from. "
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const std::complex< T > &",
          "typePlain": "const std::complex< T > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a1ad8bbdee04aff0ae34bc1338658a8b0",
      "static": false,
      "strong": false,
      "title": "operator=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a> &",
      "typePlain": "__host__ __device__ complex &",
      "url": "/api/classes/structcomplex.html#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator=",
      "argsString": "(const std::complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex& complex< T >::operator=",
      "deleted": false,
      "details": "Assign <code>z.real()</code> and <code>z.imag()</code> to the real and imaginary parts of this <code>complex</code> respectively.",
      "explicit": false,
      "fullname": "complex::operator=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 294
      },
      "name": "operator=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to copy from."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const std::complex< U > &",
          "typePlain": "const std::complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a1770a7f8a8d0838fcb738f8b2af0b377",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a> &",
      "typePlain": "__host__ __device__ complex &",
      "url": "/api/classes/structcomplex.html#function-operator=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator+=",
      "argsString": "(const complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator+=",
      "deleted": false,
      "details": "Adds a <code>complex</code> to this <code>complex</code> and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator+=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 308
      },
      "name": "operator+=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to be added."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< U > &",
          "typePlain": "const complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a05d436895a62e6e31a091c05534cb19b",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator+=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator+=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator-=",
      "argsString": "(const complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator-=",
      "deleted": false,
      "details": "Subtracts a <code>complex</code> from this <code>complex</code> and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator-=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 319
      },
      "name": "operator-=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to be subtracted."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< U > &",
          "typePlain": "const complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a5c5d23f8826c0841cfce36b742612771",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator-=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator-=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator*=",
      "argsString": "(const complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator*=",
      "deleted": false,
      "details": "Multiplies this <code>complex</code> by another <code>complex</code> and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator*=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 330
      },
      "name": "operator*=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to be multiplied."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< U > &",
          "typePlain": "const complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a915a6ce5c15d11e96bb0124f1ba30133",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator*=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator*=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator/=",
      "argsString": "(const complex< U > &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator/=",
      "deleted": false,
      "details": "Divides this <code>complex</code> by another <code>complex</code> and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator/=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 341
      },
      "name": "operator/=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to be divided."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const <a href=\"/api/classes/structcomplex.html\">complex</a>< U > &",
          "typePlain": "const complex< U > &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ac87460307e9711a756a846fd2c22cf85",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator/=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator/=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator+=",
      "argsString": "(const U &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator+=",
      "deleted": false,
      "details": "Adds a scalar to this <code>complex</code> and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator+=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 352
      },
      "name": "operator+=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The <code>complex</code> to be added."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const U &",
          "typePlain": "const U &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a6fd0ccdbe17f0ad0915ef0ab8ab65e4b",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator+=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator+=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator-=",
      "argsString": "(const U &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator-=",
      "deleted": false,
      "details": "Subtracts a scalar from this <code>complex</code> and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator-=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 363
      },
      "name": "operator-=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The scalar to be subtracted."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const U &",
          "typePlain": "const U &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a96a301927f7cfa050d58709d06ade8ce",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator-=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator-=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator*=",
      "argsString": "(const U &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator*=",
      "deleted": false,
      "details": "Multiplies this <code>complex</code> by a scalar and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator*=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 374
      },
      "name": "operator*=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The scalar to be multiplied."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const U &",
          "typePlain": "const U &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1ae5b92b2bb3b6c932d9ed8de56fa8a955",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator*=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator*=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator/=",
      "argsString": "(const U &z)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ complex<T>& complex< T >::operator/=",
      "deleted": false,
      "details": "Divides this <code>complex</code> by a scalar and assigns the result to this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::operator/=",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 11,
        "file": "thrust/complex.h",
        "line": 385
      },
      "name": "operator/=",
      "override": false,
      "paramList": [
        {
          "name": "z",
          "text": "The scalar to be divided."
        }
      ],
      "params": [
        {
          "name": "z",
          "type": "const U &",
          "typePlain": "const U &"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a8eed4082b3b6147252f2a513c142f8e1",
      "static": false,
      "strong": false,
      "templateParams": [
        {
          "name": "",
          "type": "typename U",
          "typePlain": "typename U"
        }
      ],
      "templateParamsList": [
        {
          "name": "U",
          "text": "is convertible to <code>value&#95;type</code>. "
        }
      ],
      "title": "operator/=",
      "type": "__host__ __device__ <a href=\"/api/classes/structcomplex.html\">complex</a>< T > &",
      "typePlain": "__host__ __device__ complex< T > &",
      "url": "/api/classes/structcomplex.html#function-operator/=",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-real",
      "argsString": "() const volatile",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ __device__ T complex< T >::real",
      "deleted": false,
      "details": "Returns the real part of this <code>complex</code>. ",
      "explicit": false,
      "fullname": "complex::real",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 397,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 397,
        "column": 5,
        "file": "thrust/complex.h",
        "line": 397
      },
      "name": "real",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structcomplex_1aa5bd789580fab3ce8de866e19fc54305",
      "static": false,
      "strong": false,
      "title": "real",
      "type": "__host__ __device__ T",
      "typePlain": "__host__ __device__ T",
      "url": "/api/classes/structcomplex.html#function-real",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-imag",
      "argsString": "() const volatile",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ __device__ T complex< T >::imag",
      "deleted": false,
      "details": "Returns the imaginary part of this <code>complex</code>. ",
      "explicit": false,
      "fullname": "complex::imag",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 402,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 402,
        "column": 5,
        "file": "thrust/complex.h",
        "line": 402
      },
      "name": "imag",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structcomplex_1a56547422be382c3cc146317848a90550",
      "static": false,
      "strong": false,
      "title": "imag",
      "type": "__host__ __device__ T",
      "typePlain": "__host__ __device__ T",
      "url": "/api/classes/structcomplex.html#function-imag",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-real",
      "argsString": "() const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ __device__ T complex< T >::real",
      "deleted": false,
      "details": "Returns the real part of this <code>complex</code>. ",
      "explicit": false,
      "fullname": "complex::real",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 407,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 407,
        "column": 5,
        "file": "thrust/complex.h",
        "line": 407
      },
      "name": "real",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structcomplex_1a494bc78da39ba7d3e2cef244a1ac95c7",
      "static": false,
      "strong": false,
      "title": "real",
      "type": "__host__ __device__ T",
      "typePlain": "__host__ __device__ T",
      "url": "/api/classes/structcomplex.html#function-real",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-imag",
      "argsString": "() const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ __device__ T complex< T >::imag",
      "deleted": false,
      "details": "Returns the imaginary part of this <code>complex</code>. ",
      "explicit": false,
      "fullname": "complex::imag",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 412,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 412,
        "column": 5,
        "file": "thrust/complex.h",
        "line": 412
      },
      "name": "imag",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structcomplex_1aa4beda9a5b2dd4c90e9b5b1c4c7b9d66",
      "static": false,
      "strong": false,
      "title": "imag",
      "type": "__host__ __device__ T",
      "typePlain": "__host__ __device__ T",
      "url": "/api/classes/structcomplex.html#function-imag",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-real",
      "argsString": "(T re) volatile",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ void complex< T >::real",
      "deleted": false,
      "details": "Sets the real part of this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::real",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 426,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 426,
        "column": 8,
        "file": "thrust/complex.h",
        "line": 426
      },
      "name": "real",
      "override": false,
      "paramList": [
        {
          "name": "re",
          "text": "The new real part of this <code>complex</code>. "
        }
      ],
      "params": [
        {
          "name": "re",
          "type": "T",
          "typePlain": "T"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a7aafddc166269fdb7ec5c1f772bb1742",
      "static": false,
      "strong": false,
      "title": "real",
      "type": "__host__ __device__ void",
      "typePlain": "__host__ __device__ void",
      "url": "/api/classes/structcomplex.html#function-real",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-imag",
      "argsString": "(T im) volatile",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ void complex< T >::imag",
      "deleted": false,
      "details": "Sets the imaginary part of this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::imag",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 433,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 433,
        "column": 8,
        "file": "thrust/complex.h",
        "line": 433
      },
      "name": "imag",
      "override": false,
      "paramList": [
        {
          "name": "im",
          "text": "The new imaginary part of this <code>complex.e</code>"
        }
      ],
      "params": [
        {
          "name": "im",
          "type": "T",
          "typePlain": "T"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a465eb67d0b07847f2d3f94cebfe27439",
      "static": false,
      "strong": false,
      "title": "imag",
      "type": "__host__ __device__ void",
      "typePlain": "__host__ __device__ void",
      "url": "/api/classes/structcomplex.html#function-imag",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-real",
      "argsString": "(T re)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ void complex< T >::real",
      "deleted": false,
      "details": "Sets the real part of this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::real",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 440,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 440,
        "column": 8,
        "file": "thrust/complex.h",
        "line": 440
      },
      "name": "real",
      "override": false,
      "paramList": [
        {
          "name": "re",
          "text": "The new real part of this <code>complex</code>. "
        }
      ],
      "params": [
        {
          "name": "re",
          "type": "T",
          "typePlain": "T"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1a06af93e6b1b49f45dffd433a1c45a32a",
      "static": false,
      "strong": false,
      "title": "real",
      "type": "__host__ __device__ void",
      "typePlain": "__host__ __device__ void",
      "url": "/api/classes/structcomplex.html#function-real",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-imag",
      "argsString": "(T im)",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "__host__ __device__ void complex< T >::imag",
      "deleted": false,
      "details": "Sets the imaginary part of this <code>complex</code>.",
      "explicit": false,
      "fullname": "complex::imag",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 447,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 447,
        "column": 8,
        "file": "thrust/complex.h",
        "line": 447
      },
      "name": "imag",
      "override": false,
      "paramList": [
        {
          "name": "im",
          "text": "The new imaginary part of this <code>complex</code>. "
        }
      ],
      "params": [
        {
          "name": "im",
          "type": "T",
          "typePlain": "T"
        }
      ],
      "pureVirtual": false,
      "refid": "structcomplex_1adfe3eeaab339afc9e0f4e80d88587377",
      "static": false,
      "strong": false,
      "title": "imag",
      "type": "__host__ __device__ void",
      "typePlain": "__host__ __device__ void",
      "url": "/api/classes/structcomplex.html#function-imag",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-operator-stdcomplex<-t->",
      "argsString": "() const",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "__host__ complex< T >::operator std::complex< T >",
      "deleted": false,
      "details": "Casts this <code>complex</code> to a <code>std::complex</code> of the same type. ",
      "explicit": false,
      "fullname": "complex::operator std::complex< T >",
      "hasDetails": true,
      "inline": true,
      "kind": "function",
      "location": {
        "bodyEnd": 456,
        "bodyFile": "thrust/complex.h",
        "bodyStart": 456,
        "column": 3,
        "file": "thrust/complex.h",
        "line": 456
      },
      "name": "operator std::complex< T >",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "structcomplex_1ac804a05169a57034aff3c7ef8c3b9cde",
      "static": false,
      "strong": false,
      "title": "operator std::complex< T >",
      "type": "__host__",
      "typePlain": "__host__",
      "url": "/api/classes/structcomplex.html#function-operator-stdcomplex<-t->",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "publicTypes": [
    {
      "abstract": false,
      "anchor": "#typedef-value_type",
      "category": "types",
      "const": false,
      "definition": "typedef T complex< T >::value_type",
      "details": "<code>value&#95;type</code> is the type of <code>complex's</code> real and imaginary parts. ",
      "explicit": false,
      "fullname": "complex::value_type",
      "hasDetails": true,
      "inline": false,
      "kind": "typedef",
      "location": {
        "bodyFile": "thrust/complex.h",
        "bodyStart": 160,
        "column": 13,
        "file": "thrust/complex.h",
        "line": 160
      },
      "name": "value_type",
      "override": false,
      "refid": "structcomplex_1a9f62be6218473b380bbd868cf4770d3d",
      "static": false,
      "strong": false,
      "title": "value_type",
      "type": "T",
      "typePlain": "T",
      "url": "/api/classes/structcomplex.html#typedef-value_type",
      "visibility": "public"
    }
  ],
  "refid": "structcomplex",
  "static": false,
  "strong": false,
  "templateParams": [
    {
      "name": "",
      "type": "typename T",
      "typePlain": "typename T"
    }
  ],
  "templateParamsList": [
    {
      "name": "T",
      "text": "The type used to hold the real and imaginary parts. Should be <code>float</code> or <code>double</code>. Others types are not supported. "
    }
  ],
  "title": "complex",
  "url": "/api/classes/structcomplex.html",
  "visibility": "public"
}