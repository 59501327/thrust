{
  "children": [
    {
      "anchor": "",
      "category": "classes",
      "fullname": "allocator_delete",
      "kind": "struct",
      "name": "allocator_delete",
      "refid": "structallocator__delete",
      "title": "allocator_delete",
      "url": "/api/classes/structallocator__delete.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "array_allocator_delete",
      "kind": "struct",
      "name": "array_allocator_delete",
      "refid": "structarray__allocator__delete",
      "title": "array_allocator_delete",
      "url": "/api/classes/structarray__allocator__delete.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "category": "namespaces",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "async::exclusive_scan_detail::exclusive_scan_fn",
              "kind": "struct",
              "name": "async::exclusive_scan_detail::exclusive_scan_fn",
              "refid": "structasync_1_1exclusive__scan__detail_1_1exclusive__scan__fn",
              "title": "async::exclusive_scan_detail::exclusive_scan_fn",
              "url": "/api/classes/structasync_1_1exclusive__scan__detail_1_1exclusive__scan__fn.html",
              "visibility": "public"
            }
          ],
          "fullname": "async::exclusive_scan_detail",
          "kind": "namespace",
          "name": "async::exclusive_scan_detail",
          "refid": "namespaceasync_1_1exclusive__scan__detail",
          "title": "async::exclusive_scan_detail",
          "url": "/api/namespaces/namespaceasync_1_1exclusive__scan__detail.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "namespaces",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "async::inclusive_scan_detail::inclusive_scan_fn",
              "kind": "struct",
              "name": "async::inclusive_scan_detail::inclusive_scan_fn",
              "refid": "structasync_1_1inclusive__scan__detail_1_1inclusive__scan__fn",
              "title": "async::inclusive_scan_detail::inclusive_scan_fn",
              "url": "/api/classes/structasync_1_1inclusive__scan__detail_1_1inclusive__scan__fn.html",
              "visibility": "public"
            }
          ],
          "fullname": "async::inclusive_scan_detail",
          "kind": "namespace",
          "name": "async::inclusive_scan_detail",
          "refid": "namespaceasync_1_1inclusive__scan__detail",
          "title": "async::inclusive_scan_detail",
          "url": "/api/namespaces/namespaceasync_1_1inclusive__scan__detail.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "namespaces",
          "fullname": "async::unimplemented",
          "kind": "namespace",
          "name": "async::unimplemented",
          "refid": "namespaceasync_1_1unimplemented",
          "title": "async::unimplemented",
          "url": "/api/namespaces/namespaceasync_1_1unimplemented.html",
          "visibility": "public"
        }
      ],
      "fullname": "async",
      "kind": "namespace",
      "name": "async",
      "refid": "namespaceasync",
      "title": "async",
      "url": "/api/namespaces/namespaceasync.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "exception",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "bad_optional_access",
      "kind": "class",
      "name": "bad_optional_access",
      "refid": "classbad__optional__access",
      "title": "bad_optional_access",
      "url": "/api/classes/classbad__optional__access.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::detail::iterator_category_with_system_and_traversal< std::bidirectional_iterator_tag, thrust::device_system_tag, thrust::bidirectional_traversal_tag >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "bidirectional_device_iterator_tag",
      "kind": "struct",
      "name": "bidirectional_device_iterator_tag",
      "refid": "structbidirectional__device__iterator__tag",
      "title": "bidirectional_device_iterator_tag",
      "url": "/api/classes/structbidirectional__device__iterator__tag.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "binary_function",
      "kind": "struct",
      "name": "binary_function",
      "refid": "structbinary__function",
      "title": "binary_function",
      "url": "/api/classes/structbinary__function.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::binary_function< Predicate::first_argument_type, Predicate::second_argument_type, bool >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "binary_negate",
      "kind": "struct",
      "name": "binary_negate",
      "refid": "structbinary__negate",
      "title": "binary_negate",
      "url": "/api/classes/structbinary__negate.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "binary_traits",
      "kind": "struct",
      "name": "binary_traits",
      "refid": "structbinary__traits",
      "title": "binary_traits",
      "url": "/api/classes/structbinary__traits.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "bit_and",
      "kind": "struct",
      "name": "bit_and",
      "refid": "structbit__and",
      "title": "bit_and",
      "url": "/api/classes/structbit__and.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "bit_and< void >",
      "kind": "struct",
      "name": "bit_and< void >",
      "refid": "structbit__and_3_01void_01_4",
      "title": "bit_and< void >",
      "url": "/api/classes/structbit__and_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "bit_or",
      "kind": "struct",
      "name": "bit_or",
      "refid": "structbit__or",
      "title": "bit_or",
      "url": "/api/classes/structbit__or.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "bit_or< void >",
      "kind": "struct",
      "name": "bit_or< void >",
      "refid": "structbit__or_3_01void_01_4",
      "title": "bit_or< void >",
      "url": "/api/classes/structbit__or_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "bit_xor",
      "kind": "struct",
      "name": "bit_xor",
      "refid": "structbit__xor",
      "title": "bit_xor",
      "url": "/api/classes/structbit__xor.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "bit_xor< void >",
      "kind": "struct",
      "name": "bit_xor< void >",
      "refid": "structbit__xor_3_01void_01_4",
      "title": "bit_xor< void >",
      "url": "/api/classes/structbit__xor_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "complex",
      "kind": "struct",
      "name": "complex",
      "refid": "structcomplex",
      "title": "complex",
      "url": "/api/classes/structcomplex.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<a href=\"https://en.cppreference.com/w/cpp/types/integral_constant\"><code>std::integral&#95;constant</code></a> whose value is <code>(... && Bs)</code>. ",
      "category": "classes",
      "fullname": "conjunction_value",
      "kind": "struct",
      "name": "conjunction_value",
      "refid": "structconjunction__value",
      "summary": "std::integral_constant whose value is (... && Bs). ",
      "title": "conjunction_value",
      "url": "/api/classes/structconjunction__value.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::constant_iterator_base::type< Value, use_default, use_default >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "constant_iterator",
      "kind": "class",
      "name": "constant_iterator",
      "refid": "classconstant__iterator",
      "title": "constant_iterator",
      "url": "/api/classes/classconstant__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::counting_iterator_base::type< Incrementable, use_default, use_default, use_default >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "counting_iterator",
      "kind": "class",
      "name": "counting_iterator",
      "refid": "classcounting__iterator",
      "title": "counting_iterator",
      "url": "/api/classes/classcounting__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "cpp",
      "kind": "namespace",
      "name": "cpp",
      "refid": "namespacecpp",
      "title": "cpp",
      "url": "/api/namespaces/namespacecpp.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "cuda",
      "kind": "namespace",
      "name": "cuda",
      "refid": "namespacecuda",
      "title": "cuda",
      "url": "/api/namespaces/namespacecuda.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "cuda_cub",
      "kind": "namespace",
      "name": "cuda_cub",
      "refid": "namespacecuda__cub",
      "title": "cuda_cub",
      "url": "/api/namespaces/namespacecuda__cub.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "\\exclude ",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "true_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::conjunction",
          "kind": "struct",
          "name": "detail::conjunction",
          "refid": "structdetail_1_1conjunction",
          "title": "detail::conjunction",
          "url": "/api/classes/structdetail_1_1conjunction.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "B",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::conjunction< B >",
          "kind": "struct",
          "name": "detail::conjunction< B >",
          "refid": "structdetail_1_1conjunction_3_01B_01_4",
          "title": "detail::conjunction< B >",
          "url": "/api/classes/structdetail_1_1conjunction_3_01b_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "std::conditional::type< bool(B::value), conjunction< Bs... >, B >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::conjunction< B, Bs... >",
          "kind": "struct",
          "name": "detail::conjunction< B, Bs... >",
          "refid": "structdetail_1_1conjunction_3_01B_00_01Bs_8_8_8_01_4",
          "title": "detail::conjunction< B, Bs... >",
          "url": "/api/classes/structdetail_1_1conjunction_3_01b_00_01bs_8_8_8_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::i_am_secret",
          "kind": "struct",
          "name": "detail::i_am_secret",
          "refid": "structdetail_1_1i__am__secret",
          "title": "detail::i_am_secret",
          "url": "/api/classes/structdetail_1_1i__am__secret.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::invoke_result_impl",
          "kind": "struct",
          "name": "detail::invoke_result_impl",
          "refid": "structdetail_1_1invoke__result__impl",
          "title": "detail::invoke_result_impl",
          "url": "/api/classes/structdetail_1_1invoke__result__impl.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::invoke_result_impl< F, decltype(detail::invoke(std::declval< F >(), std::declval< Us >()...), void()), Us... >",
          "kind": "struct",
          "name": "detail::invoke_result_impl< F, decltype(detail::invoke(std::declval< F >(), std::declval< Us >()...), void()), Us... >",
          "refid": "structdetail_1_1invoke__result__impl_3_01F_00_01decltype_07detail_1_1invoke_07std_1_1declval_3_07c1f4caaa1db079732d0d4c8ba802ae7",
          "title": "detail::invoke_result_impl< F, decltype(detail::invoke(std::declval< F >(), std::declval< Us >()...), void()), Us... >",
          "url": "/api/classes/structdetail_1_1invoke__result__impl_3_01f_00_01decltype_07detail_1_1invoke_07std_1_1declval_3_07c1f4caaa1db079732d0d4c8ba802ae7.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "true_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::is_nothrow_swappable",
          "kind": "struct",
          "name": "detail::is_nothrow_swappable",
          "refid": "structdetail_1_1is__nothrow__swappable",
          "title": "detail::is_nothrow_swappable",
          "url": "/api/classes/structdetail_1_1is__nothrow__swappable.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "false_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::is_optional_impl",
          "kind": "struct",
          "name": "detail::is_optional_impl",
          "refid": "structdetail_1_1is__optional__impl",
          "title": "detail::is_optional_impl",
          "url": "/api/classes/structdetail_1_1is__optional__impl.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "true_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::is_optional_impl< optional< T > >",
          "kind": "struct",
          "name": "detail::is_optional_impl< optional< T > >",
          "refid": "structdetail_1_1is__optional__impl_3_01optional_3_01T_01_4_01_4",
          "title": "detail::is_optional_impl< optional< T > >",
          "url": "/api/classes/structdetail_1_1is__optional__impl_3_01optional_3_01t_01_4_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "true_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::is_swappable",
          "kind": "struct",
          "name": "detail::is_swappable",
          "refid": "structdetail_1_1is__swappable",
          "title": "detail::is_swappable",
          "url": "/api/classes/structdetail_1_1is__swappable.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_move_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "derivedClasses": [
            {
              "external": false,
              "name": "detail::optional_move_assign_base< T, bool >",
              "refid": "structdetail_1_1optional__move__assign__base",
              "url": "/api/classes/structdetail_1_1optional__move__assign__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "detail::optional_move_assign_base< T, false >",
              "refid": "structdetail_1_1optional__move__assign__base_3_01T_00_01false_01_4",
              "url": "/api/classes/structdetail_1_1optional__move__assign__base_3_01t_00_01false_01_4.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "fullname": "detail::optional_copy_assign_base",
          "kind": "struct",
          "name": "detail::optional_copy_assign_base",
          "refid": "structdetail_1_1optional__copy__assign__base",
          "title": "detail::optional_copy_assign_base",
          "url": "/api/classes/structdetail_1_1optional__copy__assign__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_move_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::optional_copy_assign_base< T, false >",
          "kind": "struct",
          "name": "detail::optional_copy_assign_base< T, false >",
          "refid": "structdetail_1_1optional__copy__assign__base_3_01T_00_01false_01_4",
          "title": "detail::optional_copy_assign_base< T, false >",
          "url": "/api/classes/structdetail_1_1optional__copy__assign__base_3_01t_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_operations_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "derivedClasses": [
            {
              "external": false,
              "name": "detail::optional_move_base< T, bool >",
              "refid": "structdetail_1_1optional__move__base",
              "url": "/api/classes/structdetail_1_1optional__move__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "detail::optional_move_base< T, false >",
              "refid": "structdetail_1_1optional__move__base_3_01T_00_01false_01_4",
              "url": "/api/classes/structdetail_1_1optional__move__base_3_01t_00_01false_01_4.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "detail::optional_move_base< T >",
              "refid": "structdetail_1_1optional__move__base",
              "url": "/api/classes/structdetail_1_1optional__move__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "fullname": "detail::optional_copy_base",
          "kind": "struct",
          "name": "detail::optional_copy_base",
          "refid": "structdetail_1_1optional__copy__base",
          "title": "detail::optional_copy_base",
          "url": "/api/classes/structdetail_1_1optional__copy__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_operations_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::optional_copy_base< T, false >",
          "kind": "struct",
          "name": "detail::optional_copy_base< T, false >",
          "refid": "structdetail_1_1optional__copy__base_3_01T_00_01false_01_4",
          "title": "detail::optional_copy_base< T, false >",
          "url": "/api/classes/structdetail_1_1optional__copy__base_3_01t_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_assign_base",
          "kind": "struct",
          "name": "detail::optional_delete_assign_base",
          "refid": "structdetail_1_1optional__delete__assign__base",
          "title": "detail::optional_delete_assign_base",
          "url": "/api/classes/structdetail_1_1optional__delete__assign__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_assign_base< T, false, false >",
          "kind": "struct",
          "name": "detail::optional_delete_assign_base< T, false, false >",
          "refid": "structdetail_1_1optional__delete__assign__base_3_01T_00_01false_00_01false_01_4",
          "title": "detail::optional_delete_assign_base< T, false, false >",
          "url": "/api/classes/structdetail_1_1optional__delete__assign__base_3_01t_00_01false_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_assign_base< T, false, true >",
          "kind": "struct",
          "name": "detail::optional_delete_assign_base< T, false, true >",
          "refid": "structdetail_1_1optional__delete__assign__base_3_01T_00_01false_00_01true_01_4",
          "title": "detail::optional_delete_assign_base< T, false, true >",
          "url": "/api/classes/structdetail_1_1optional__delete__assign__base_3_01t_00_01false_00_01true_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_assign_base< T, true, false >",
          "kind": "struct",
          "name": "detail::optional_delete_assign_base< T, true, false >",
          "refid": "structdetail_1_1optional__delete__assign__base_3_01T_00_01true_00_01false_01_4",
          "title": "detail::optional_delete_assign_base< T, true, false >",
          "url": "/api/classes/structdetail_1_1optional__delete__assign__base_3_01t_00_01true_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_ctor_base",
          "kind": "struct",
          "name": "detail::optional_delete_ctor_base",
          "refid": "structdetail_1_1optional__delete__ctor__base",
          "title": "detail::optional_delete_ctor_base",
          "url": "/api/classes/structdetail_1_1optional__delete__ctor__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_ctor_base< T, false, false >",
          "kind": "struct",
          "name": "detail::optional_delete_ctor_base< T, false, false >",
          "refid": "structdetail_1_1optional__delete__ctor__base_3_01T_00_01false_00_01false_01_4",
          "title": "detail::optional_delete_ctor_base< T, false, false >",
          "url": "/api/classes/structdetail_1_1optional__delete__ctor__base_3_01t_00_01false_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_ctor_base< T, false, true >",
          "kind": "struct",
          "name": "detail::optional_delete_ctor_base< T, false, true >",
          "refid": "structdetail_1_1optional__delete__ctor__base_3_01T_00_01false_00_01true_01_4",
          "title": "detail::optional_delete_ctor_base< T, false, true >",
          "url": "/api/classes/structdetail_1_1optional__delete__ctor__base_3_01t_00_01false_00_01true_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::optional_delete_ctor_base< T, true, false >",
          "kind": "struct",
          "name": "detail::optional_delete_ctor_base< T, true, false >",
          "refid": "structdetail_1_1optional__delete__ctor__base_3_01T_00_01true_00_01false_01_4",
          "title": "detail::optional_delete_ctor_base< T, true, false >",
          "url": "/api/classes/structdetail_1_1optional__delete__ctor__base_3_01t_00_01true_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_copy_assign_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::optional_move_assign_base",
          "kind": "struct",
          "name": "detail::optional_move_assign_base",
          "refid": "structdetail_1_1optional__move__assign__base",
          "title": "detail::optional_move_assign_base",
          "url": "/api/classes/structdetail_1_1optional__move__assign__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_copy_assign_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::optional_move_assign_base< T, false >",
          "kind": "struct",
          "name": "detail::optional_move_assign_base< T, false >",
          "refid": "structdetail_1_1optional__move__assign__base_3_01T_00_01false_01_4",
          "title": "detail::optional_move_assign_base< T, false >",
          "url": "/api/classes/structdetail_1_1optional__move__assign__base_3_01t_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_copy_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "derivedClasses": [
            {
              "external": false,
              "name": "detail::optional_copy_assign_base< T, bool >",
              "refid": "structdetail_1_1optional__copy__assign__base",
              "url": "/api/classes/structdetail_1_1optional__copy__assign__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "detail::optional_copy_assign_base< T, false >",
              "refid": "structdetail_1_1optional__copy__assign__base_3_01T_00_01false_01_4",
              "url": "/api/classes/structdetail_1_1optional__copy__assign__base_3_01t_00_01false_01_4.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "detail::optional_copy_assign_base< T >",
              "refid": "structdetail_1_1optional__copy__assign__base",
              "url": "/api/classes/structdetail_1_1optional__copy__assign__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "fullname": "detail::optional_move_base",
          "kind": "struct",
          "name": "detail::optional_move_base",
          "refid": "structdetail_1_1optional__move__base",
          "title": "detail::optional_move_base",
          "url": "/api/classes/structdetail_1_1optional__move__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_copy_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::optional_move_base< T, false >",
          "kind": "struct",
          "name": "detail::optional_move_base< T, false >",
          "refid": "structdetail_1_1optional__move__base_3_01T_00_01false_01_4",
          "title": "detail::optional_move_base< T, false >",
          "url": "/api/classes/structdetail_1_1optional__move__base_3_01t_00_01false_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::optional_storage_base< T >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "derivedClasses": [
            {
              "external": false,
              "name": "detail::optional_copy_base< T, bool >",
              "refid": "structdetail_1_1optional__copy__base",
              "url": "/api/classes/structdetail_1_1optional__copy__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "detail::optional_copy_base< T, false >",
              "refid": "structdetail_1_1optional__copy__base_3_01T_00_01false_01_4",
              "url": "/api/classes/structdetail_1_1optional__copy__base_3_01t_00_01false_01_4.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "detail::optional_copy_base< T >",
              "refid": "structdetail_1_1optional__copy__base",
              "url": "/api/classes/structdetail_1_1optional__copy__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "fullname": "detail::optional_operations_base",
          "kind": "struct",
          "name": "detail::optional_operations_base",
          "refid": "structdetail_1_1optional__operations__base",
          "title": "detail::optional_operations_base",
          "url": "/api/classes/structdetail_1_1optional__operations__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "detail::optional_storage_base::dummy",
              "kind": "struct",
              "name": "detail::optional_storage_base::dummy",
              "refid": "structdetail_1_1optional__storage__base_1_1dummy",
              "title": "detail::optional_storage_base::dummy",
              "url": "/api/classes/structdetail_1_1optional__storage__base_1_1dummy.html",
              "visibility": "public"
            }
          ],
          "derivedClasses": [
            {
              "external": false,
              "name": "detail::optional_operations_base< T >",
              "refid": "structdetail_1_1optional__operations__base",
              "url": "/api/classes/structdetail_1_1optional__operations__base.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "fullname": "detail::optional_storage_base",
          "kind": "struct",
          "name": "detail::optional_storage_base",
          "refid": "structdetail_1_1optional__storage__base",
          "title": "detail::optional_storage_base",
          "url": "/api/classes/structdetail_1_1optional__storage__base.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "detail::optional_storage_base< T, true >::dummy",
              "kind": "struct",
              "name": "detail::optional_storage_base< T, true >::dummy",
              "refid": "structdetail_1_1optional__storage__base_3_01T_00_01true_01_4_1_1dummy",
              "title": "detail::optional_storage_base< T, true >::dummy",
              "url": "/api/classes/structdetail_1_1optional__storage__base_3_01t_00_01true_01_4_1_1dummy.html",
              "visibility": "public"
            }
          ],
          "fullname": "detail::optional_storage_base< T, true >",
          "kind": "struct",
          "name": "detail::optional_storage_base< T, true >",
          "refid": "structdetail_1_1optional__storage__base_3_01T_00_01true_01_4",
          "title": "detail::optional_storage_base< T, true >",
          "url": "/api/classes/structdetail_1_1optional__storage__base_3_01t_00_01true_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::returns_void_impl",
          "kind": "struct",
          "name": "detail::returns_void_impl",
          "refid": "structdetail_1_1returns__void__impl",
          "title": "detail::returns_void_impl",
          "url": "/api/classes/structdetail_1_1returns__void__impl.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "std::is_void< invoke_result_t< F, U... > >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "detail::returns_void_impl< F, void_t< invoke_result_t< F, U... > >, U... >",
          "kind": "struct",
          "name": "detail::returns_void_impl< F, void_t< invoke_result_t< F, U... > >, U... >",
          "refid": "structdetail_1_1returns__void__impl_3_01F_00_01void__t_3_01invoke__result__t_3_01F_00_01U_8_8_8_01_4_01_4_00_01U_8_8_8_01_4",
          "title": "detail::returns_void_impl< F, void_t< invoke_result_t< F, U... > >, U... >",
          "url": "/api/classes/structdetail_1_1returns__void__impl_3_01f_00_01void__t_3_01invoke__result__t_3_01f_00_01u_8_8_8_01_4_01_4_00_01u_8_8_8_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "detail::voider",
          "kind": "struct",
          "name": "detail::voider",
          "refid": "structdetail_1_1voider",
          "title": "detail::voider",
          "url": "/api/classes/structdetail_1_1voider.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "namespaces",
          "fullname": "detail::zip_detail",
          "kind": "namespace",
          "name": "detail::zip_detail",
          "refid": "namespacedetail_1_1zip__detail",
          "title": "detail::zip_detail",
          "url": "/api/namespaces/namespacedetail_1_1zip__detail.html",
          "visibility": "public"
        }
      ],
      "fullname": "detail",
      "kind": "namespace",
      "name": "detail",
      "refid": "namespacedetail",
      "summary": "\\exclude ",
      "title": "detail",
      "url": "/api/namespaces/namespacedetail.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::mr::stateless_resource_allocator< T, device_ptr_memory_resource< device_memory_resource > >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "brief": "An allocator which creates new elements in memory accessible by devices. ",
      "category": "classes",
      "children": [
        {
          "anchor": "",
          "category": "classes",
          "fullname": "device_allocator::rebind",
          "kind": "struct",
          "name": "device_allocator::rebind",
          "refid": "structdevice__allocator_1_1rebind",
          "title": "device_allocator::rebind",
          "url": "/api/classes/structdevice__allocator_1_1rebind.html",
          "visibility": "public"
        }
      ],
      "fullname": "device_allocator",
      "kind": "class",
      "name": "device_allocator",
      "refid": "classdevice__allocator",
      "summary": "An allocator which creates new elements in memory accessible by devices. ",
      "title": "device_allocator",
      "url": "/api/classes/classdevice__allocator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::system::__THRUST_DEVICE_SYSTEM_NAMESPACE::execution_policy< DerivedPolicy >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "device_execution_policy",
      "kind": "struct",
      "name": "device_execution_policy",
      "refid": "structdevice__execution__policy",
      "title": "device_execution_policy",
      "url": "/api/classes/structdevice__execution__policy.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "children": [
        {
          "anchor": "",
          "category": "classes",
          "fullname": "device_malloc_allocator::rebind",
          "kind": "struct",
          "name": "device_malloc_allocator::rebind",
          "refid": "structdevice__malloc__allocator_1_1rebind",
          "title": "device_malloc_allocator::rebind",
          "url": "/api/classes/structdevice__malloc__allocator_1_1rebind.html",
          "visibility": "public"
        }
      ],
      "fullname": "device_malloc_allocator",
      "kind": "class",
      "name": "device_malloc_allocator",
      "refid": "classdevice__malloc__allocator",
      "title": "device_malloc_allocator",
      "url": "/api/classes/classdevice__malloc__allocator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "children": [
        {
          "anchor": "",
          "category": "classes",
          "fullname": "device_new_allocator::rebind",
          "kind": "struct",
          "name": "device_new_allocator::rebind",
          "refid": "structdevice__new__allocator_1_1rebind",
          "title": "device_new_allocator::rebind",
          "url": "/api/classes/structdevice__new__allocator_1_1rebind.html",
          "visibility": "public"
        }
      ],
      "fullname": "device_new_allocator",
      "kind": "class",
      "name": "device_new_allocator",
      "refid": "classdevice__new__allocator",
      "title": "device_new_allocator",
      "url": "/api/classes/classdevice__new__allocator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<code>device&#95;ptr</code> is a pointer-like object which points to an object that resides in memory associated with the device system. ",
      "category": "classes",
      "fullname": "device_ptr",
      "kind": "class",
      "name": "device_ptr",
      "refid": "classdevice__ptr",
      "summary": "device_ptr is a pointer-like object which points to an object that resides in memory associated with the device system. ",
      "title": "device_ptr",
      "url": "/api/classes/classdevice__ptr.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::mr::memory_resource< device_ptr< void > >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "device_ptr_memory_resource",
      "kind": "class",
      "name": "device_ptr_memory_resource",
      "refid": "classdevice__ptr__memory__resource",
      "title": "device_ptr_memory_resource",
      "url": "/api/classes/classdevice__ptr__memory__resource.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "device_reference",
      "kind": "class",
      "name": "device_reference",
      "refid": "classdevice__reference",
      "title": "device_reference",
      "url": "/api/classes/classdevice__reference.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::vector_base< T, thrust::device_allocator< T > >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "device_vector",
      "kind": "class",
      "name": "device_vector",
      "refid": "classdevice__vector",
      "title": "device_vector",
      "url": "/api/classes/classdevice__vector.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::discard_iterator_base::type< use_default >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "discard_iterator",
      "kind": "class",
      "name": "discard_iterator",
      "refid": "classdiscard__iterator",
      "title": "discard_iterator",
      "url": "/api/classes/classdiscard__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<a href=\"https://en.cppreference.com/w/cpp/types/integral_constant\"><code>std::integral&#95;constant</code></a> whose value is <code>(... || Bs)</code>. ",
      "category": "classes",
      "fullname": "disjunction_value",
      "kind": "struct",
      "name": "disjunction_value",
      "refid": "structdisjunction__value",
      "summary": "std::integral_constant whose value is (... || Bs). ",
      "title": "disjunction_value",
      "url": "/api/classes/structdisjunction__value.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "divides",
      "kind": "struct",
      "name": "divides",
      "refid": "structdivides",
      "title": "divides",
      "url": "/api/classes/structdivides.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "divides< void >",
      "kind": "struct",
      "name": "divides< void >",
      "refid": "structdivides_3_01void_01_4",
      "title": "divides< void >",
      "url": "/api/classes/structdivides_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "equal_to",
      "kind": "struct",
      "name": "equal_to",
      "refid": "structequal__to",
      "title": "equal_to",
      "url": "/api/classes/structequal__to.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "equal_to< void >",
      "kind": "struct",
      "name": "equal_to< void >",
      "refid": "structequal__to_3_01void_01_4",
      "title": "equal_to< void >",
      "url": "/api/classes/structequal__to_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::detail::iterator_category_with_system_and_traversal< std::forward_iterator_tag, thrust::device_system_tag, thrust::forward_traversal_tag >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "forward_device_iterator_tag",
      "kind": "struct",
      "name": "forward_device_iterator_tag",
      "refid": "structforward__device__iterator__tag",
      "title": "forward_device_iterator_tag",
      "url": "/api/classes/structforward__device__iterator__tag.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "greater",
      "kind": "struct",
      "name": "greater",
      "refid": "structgreater",
      "title": "greater",
      "url": "/api/classes/structgreater.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "greater< void >",
      "kind": "struct",
      "name": "greater< void >",
      "refid": "structgreater_3_01void_01_4",
      "title": "greater< void >",
      "url": "/api/classes/structgreater_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "greater_equal",
      "kind": "struct",
      "name": "greater_equal",
      "refid": "structgreater__equal",
      "title": "greater_equal",
      "url": "/api/classes/structgreater__equal.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "greater_equal< void >",
      "kind": "struct",
      "name": "greater_equal< void >",
      "refid": "structgreater__equal_3_01void_01_4",
      "title": "greater_equal< void >",
      "url": "/api/classes/structgreater__equal_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::system::__THRUST_HOST_SYSTEM_NAMESPACE::execution_policy< DerivedPolicy >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "host_execution_policy",
      "kind": "struct",
      "name": "host_execution_policy",
      "refid": "structhost__execution__policy",
      "title": "host_execution_policy",
      "url": "/api/classes/structhost__execution__policy.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::vector_base< T, std::allocator< T > >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "host_vector",
      "kind": "class",
      "name": "host_vector",
      "refid": "classhost__vector",
      "title": "host_vector",
      "url": "/api/classes/classhost__vector.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "identity",
      "kind": "struct",
      "name": "identity",
      "refid": "structidentity",
      "title": "identity",
      "url": "/api/classes/structidentity.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "identity< void >",
      "kind": "struct",
      "name": "identity< void >",
      "refid": "structidentity_3_01void_01_4",
      "title": "identity< void >",
      "url": "/api/classes/structidentity_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "A tag type to tell optional to construct its value in-place. ",
      "category": "classes",
      "fullname": "in_place_t",
      "kind": "struct",
      "name": "in_place_t",
      "refid": "structin__place__t",
      "summary": "A tag type to tell optional to construct its value in-place. ",
      "title": "in_place_t",
      "url": "/api/classes/structin__place__t.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::detail::iterator_category_with_system_and_traversal< std::input_iterator_tag, thrust::device_system_tag, thrust::single_pass_traversal_tag >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "input_device_iterator_tag",
      "kind": "struct",
      "name": "input_device_iterator_tag",
      "refid": "structinput__device__iterator__tag",
      "title": "input_device_iterator_tag",
      "url": "/api/classes/structinput__device__iterator__tag.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::iterator_adaptor_base::type< Derived, Base, use_default, use_default, use_default, use_default, use_default >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "iterator_adaptor",
      "kind": "class",
      "name": "iterator_adaptor",
      "refid": "classiterator__adaptor",
      "title": "iterator_adaptor",
      "url": "/api/classes/classiterator__adaptor.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_core_access",
      "kind": "class",
      "name": "iterator_core_access",
      "refid": "classiterator__core__access",
      "title": "iterator_core_access",
      "url": "/api/classes/classiterator__core__access.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_difference",
      "kind": "struct",
      "name": "iterator_difference",
      "refid": "structiterator__difference",
      "title": "iterator_difference",
      "url": "/api/classes/structiterator__difference.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_facade",
      "kind": "class",
      "name": "iterator_facade",
      "refid": "classiterator__facade",
      "title": "iterator_facade",
      "url": "/api/classes/classiterator__facade.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_pointer",
      "kind": "struct",
      "name": "iterator_pointer",
      "refid": "structiterator__pointer",
      "title": "iterator_pointer",
      "url": "/api/classes/structiterator__pointer.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_reference",
      "kind": "struct",
      "name": "iterator_reference",
      "refid": "structiterator__reference",
      "title": "iterator_reference",
      "url": "/api/classes/structiterator__reference.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_system",
      "kind": "struct",
      "name": "iterator_system",
      "refid": "structiterator__system",
      "title": "iterator_system",
      "url": "/api/classes/structiterator__system.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "std::iterator_traits< T >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "iterator_traits",
      "kind": "struct",
      "name": "iterator_traits",
      "refid": "structiterator__traits",
      "title": "iterator_traits",
      "url": "/api/classes/structiterator__traits.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_traversal",
      "kind": "struct",
      "name": "iterator_traversal",
      "refid": "structiterator__traversal",
      "title": "iterator_traversal",
      "url": "/api/classes/structiterator__traversal.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "iterator_value",
      "kind": "struct",
      "name": "iterator_value",
      "refid": "structiterator__value",
      "title": "iterator_value",
      "url": "/api/classes/structiterator__value.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "less",
      "kind": "struct",
      "name": "less",
      "refid": "structless",
      "title": "less",
      "url": "/api/classes/structless.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "less< void >",
      "kind": "struct",
      "name": "less< void >",
      "refid": "structless_3_01void_01_4",
      "title": "less< void >",
      "url": "/api/classes/structless_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "less_equal",
      "kind": "struct",
      "name": "less_equal",
      "refid": "structless__equal",
      "title": "less_equal",
      "url": "/api/classes/structless__equal.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "less_equal< void >",
      "kind": "struct",
      "name": "less_equal< void >",
      "refid": "structless__equal_3_01void_01_4",
      "title": "less_equal< void >",
      "url": "/api/classes/structless__equal_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "logical_and",
      "kind": "struct",
      "name": "logical_and",
      "refid": "structlogical__and",
      "title": "logical_and",
      "url": "/api/classes/structlogical__and.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "logical_and< void >",
      "kind": "struct",
      "name": "logical_and< void >",
      "refid": "structlogical__and_3_01void_01_4",
      "title": "logical_and< void >",
      "url": "/api/classes/structlogical__and_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "logical_not",
      "kind": "struct",
      "name": "logical_not",
      "refid": "structlogical__not",
      "title": "logical_not",
      "url": "/api/classes/structlogical__not.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "logical_not< void >",
      "kind": "struct",
      "name": "logical_not< void >",
      "refid": "structlogical__not_3_01void_01_4",
      "title": "logical_not< void >",
      "url": "/api/classes/structlogical__not_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "logical_or",
      "kind": "struct",
      "name": "logical_or",
      "refid": "structlogical__or",
      "title": "logical_or",
      "url": "/api/classes/structlogical__or.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "logical_or< void >",
      "kind": "struct",
      "name": "logical_or< void >",
      "refid": "structlogical__or_3_01void_01_4",
      "title": "logical_or< void >",
      "url": "/api/classes/structlogical__or_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "maximum",
      "kind": "struct",
      "name": "maximum",
      "refid": "structmaximum",
      "title": "maximum",
      "url": "/api/classes/structmaximum.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "maximum< void >",
      "kind": "struct",
      "name": "maximum< void >",
      "refid": "structmaximum_3_01void_01_4",
      "title": "maximum< void >",
      "url": "/api/classes/structmaximum_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "minimum",
      "kind": "struct",
      "name": "minimum",
      "refid": "structminimum",
      "title": "minimum",
      "url": "/api/classes/structminimum.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "minimum< void >",
      "kind": "struct",
      "name": "minimum< void >",
      "refid": "structminimum_3_01void_01_4",
      "title": "minimum< void >",
      "url": "/api/classes/structminimum_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "minus",
      "kind": "struct",
      "name": "minus",
      "refid": "structminus",
      "title": "minus",
      "url": "/api/classes/structminus.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "minus< void >",
      "kind": "struct",
      "name": "minus< void >",
      "refid": "structminus_3_01void_01_4",
      "title": "minus< void >",
      "url": "/api/classes/structminus_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "modulus",
      "kind": "struct",
      "name": "modulus",
      "refid": "structmodulus",
      "title": "modulus",
      "url": "/api/classes/structmodulus.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "modulus< void >",
      "kind": "struct",
      "name": "modulus< void >",
      "refid": "structmodulus_3_01void_01_4",
      "title": "modulus< void >",
      "url": "/api/classes/structmodulus_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "Used to represent an optional with no data; essentially a bool. ",
      "category": "classes",
      "fullname": "monostate",
      "kind": "class",
      "name": "monostate",
      "refid": "classmonostate",
      "summary": "Used to represent an optional with no data; essentially a bool. ",
      "title": "monostate",
      "url": "/api/classes/classmonostate.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<code>thrust::mr</code> is the namespace containing system agnostic types and functions for <code>memory&#95;resource</code> related functionalities. ",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "mr::validator< MR >",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::allocator::rebind",
              "kind": "struct",
              "name": "mr::allocator::rebind",
              "refid": "structmr_1_1allocator_1_1rebind",
              "title": "mr::allocator::rebind",
              "url": "/api/classes/structmr_1_1allocator_1_1rebind.html",
              "visibility": "public"
            }
          ],
          "fullname": "mr::allocator",
          "kind": "class",
          "name": "mr::allocator",
          "refid": "classmr_1_1allocator",
          "title": "mr::allocator",
          "url": "/api/classes/classmr_1_1allocator.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "mr::memory_resource< Upstream::pointer >",
              "refid": "classmr_1_1memory__resource",
              "url": "/api/classes/classmr_1_1memory__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "mr::disjoint_synchronized_pool_resource",
          "kind": "struct",
          "name": "mr::disjoint_synchronized_pool_resource",
          "refid": "structmr_1_1disjoint__synchronized__pool__resource",
          "title": "mr::disjoint_synchronized_pool_resource",
          "url": "/api/classes/structmr_1_1disjoint__synchronized__pool__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "mr::memory_resource< Upstream::pointer >",
              "refid": "classmr_1_1memory__resource",
              "url": "/api/classes/classmr_1_1memory__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": true,
              "name": "mr::validator2< Upstream, Bookkeeper >",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::disjoint_unsynchronized_pool_resource::chunk_descriptor",
              "kind": "struct",
              "name": "mr::disjoint_unsynchronized_pool_resource::chunk_descriptor",
              "refid": "structmr_1_1disjoint__unsynchronized__pool__resource_1_1chunk__descriptor",
              "title": "mr::disjoint_unsynchronized_pool_resource::chunk_descriptor",
              "url": "/api/classes/structmr_1_1disjoint__unsynchronized__pool__resource_1_1chunk__descriptor.html",
              "visibility": "private"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::disjoint_unsynchronized_pool_resource::equal_pointers",
              "kind": "struct",
              "name": "mr::disjoint_unsynchronized_pool_resource::equal_pointers",
              "refid": "structmr_1_1disjoint__unsynchronized__pool__resource_1_1equal__pointers",
              "title": "mr::disjoint_unsynchronized_pool_resource::equal_pointers",
              "url": "/api/classes/structmr_1_1disjoint__unsynchronized__pool__resource_1_1equal__pointers.html",
              "visibility": "private"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::disjoint_unsynchronized_pool_resource::matching_alignment",
              "kind": "struct",
              "name": "mr::disjoint_unsynchronized_pool_resource::matching_alignment",
              "refid": "structmr_1_1disjoint__unsynchronized__pool__resource_1_1matching__alignment",
              "title": "mr::disjoint_unsynchronized_pool_resource::matching_alignment",
              "url": "/api/classes/structmr_1_1disjoint__unsynchronized__pool__resource_1_1matching__alignment.html",
              "visibility": "private"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::disjoint_unsynchronized_pool_resource::oversized_block_descriptor",
              "kind": "struct",
              "name": "mr::disjoint_unsynchronized_pool_resource::oversized_block_descriptor",
              "refid": "structmr_1_1disjoint__unsynchronized__pool__resource_1_1oversized__block__descriptor",
              "title": "mr::disjoint_unsynchronized_pool_resource::oversized_block_descriptor",
              "url": "/api/classes/structmr_1_1disjoint__unsynchronized__pool__resource_1_1oversized__block__descriptor.html",
              "visibility": "private"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::disjoint_unsynchronized_pool_resource::pool",
              "kind": "struct",
              "name": "mr::disjoint_unsynchronized_pool_resource::pool",
              "refid": "structmr_1_1disjoint__unsynchronized__pool__resource_1_1pool",
              "title": "mr::disjoint_unsynchronized_pool_resource::pool",
              "url": "/api/classes/structmr_1_1disjoint__unsynchronized__pool__resource_1_1pool.html",
              "visibility": "private"
            }
          ],
          "fullname": "mr::disjoint_unsynchronized_pool_resource",
          "kind": "class",
          "name": "mr::disjoint_unsynchronized_pool_resource",
          "refid": "classmr_1_1disjoint__unsynchronized__pool__resource",
          "title": "mr::disjoint_unsynchronized_pool_resource",
          "url": "/api/classes/classmr_1_1disjoint__unsynchronized__pool__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "mr::memory_resource< Pointer >",
              "refid": "classmr_1_1memory__resource",
              "url": "/api/classes/classmr_1_1memory__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": true,
              "name": "mr::validator< Upstream >",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "category": "classes",
          "fullname": "mr::fancy_pointer_resource",
          "kind": "class",
          "name": "mr::fancy_pointer_resource",
          "refid": "classmr_1_1fancy__pointer__resource",
          "title": "mr::fancy_pointer_resource",
          "url": "/api/classes/classmr_1_1fancy__pointer__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "derivedClasses": [
            {
              "external": false,
              "name": "mr::fancy_pointer_resource< Upstream, Pointer >",
              "refid": "classmr_1_1fancy__pointer__resource",
              "url": "/api/classes/classmr_1_1fancy__pointer__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": false,
              "name": "mr::polymorphic_adaptor_resource< Pointer >",
              "refid": "classmr_1_1polymorphic__adaptor__resource",
              "url": "/api/classes/classmr_1_1polymorphic__adaptor__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "fullname": "mr::memory_resource",
          "kind": "class",
          "name": "mr::memory_resource",
          "refid": "classmr_1_1memory__resource",
          "title": "mr::memory_resource",
          "url": "/api/classes/classmr_1_1memory__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "mr::memory_resource< void * >",
          "kind": "class",
          "name": "mr::memory_resource< void * >",
          "refid": "classmr_1_1memory__resource_3_01void_01_5_01_4",
          "title": "mr::memory_resource< void * >",
          "url": "/api/classes/classmr_1_1memory__resource_3_01void_01_5_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "mr::memory_resource<>",
              "refid": "classmr_1_1memory__resource",
              "url": "/api/classes/classmr_1_1memory__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "mr::new_delete_resource",
          "kind": "class",
          "name": "mr::new_delete_resource",
          "refid": "classmr_1_1new__delete__resource",
          "title": "mr::new_delete_resource",
          "url": "/api/classes/classmr_1_1new__delete__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "mr::memory_resource< void * >",
              "refid": "classmr_1_1memory__resource",
              "url": "/api/classes/classmr_1_1memory__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "mr::polymorphic_adaptor_resource",
          "kind": "class",
          "name": "mr::polymorphic_adaptor_resource",
          "refid": "classmr_1_1polymorphic__adaptor__resource",
          "title": "mr::polymorphic_adaptor_resource",
          "url": "/api/classes/classmr_1_1polymorphic__adaptor__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "mr::pool_options",
          "kind": "struct",
          "name": "mr::pool_options",
          "refid": "structmr_1_1pool__options",
          "title": "mr::pool_options",
          "url": "/api/classes/structmr_1_1pool__options.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "thrust::mr::allocator< T, Upstream >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::stateless_resource_allocator::rebind",
              "kind": "struct",
              "name": "mr::stateless_resource_allocator::rebind",
              "refid": "structmr_1_1stateless__resource__allocator_1_1rebind",
              "title": "mr::stateless_resource_allocator::rebind",
              "url": "/api/classes/structmr_1_1stateless__resource__allocator_1_1rebind.html",
              "visibility": "public"
            }
          ],
          "fullname": "mr::stateless_resource_allocator",
          "kind": "class",
          "name": "mr::stateless_resource_allocator",
          "refid": "classmr_1_1stateless__resource__allocator",
          "title": "mr::stateless_resource_allocator",
          "url": "/api/classes/classmr_1_1stateless__resource__allocator.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "mr::memory_resource< Upstream::pointer >",
              "refid": "classmr_1_1memory__resource",
              "url": "/api/classes/classmr_1_1memory__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "mr::synchronized_pool_resource",
          "kind": "struct",
          "name": "mr::synchronized_pool_resource",
          "refid": "structmr_1_1synchronized__pool__resource",
          "title": "mr::synchronized_pool_resource",
          "url": "/api/classes/structmr_1_1synchronized__pool__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "mr::memory_resource< Upstream::pointer >",
              "refid": "classmr_1_1memory__resource",
              "url": "/api/classes/classmr_1_1memory__resource.html",
              "virtual": "non-virtual",
              "visibility": "public"
            },
            {
              "external": true,
              "name": "mr::validator< Upstream >",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::unsynchronized_pool_resource::block_descriptor",
              "kind": "struct",
              "name": "mr::unsynchronized_pool_resource::block_descriptor",
              "refid": "structmr_1_1unsynchronized__pool__resource_1_1block__descriptor",
              "title": "mr::unsynchronized_pool_resource::block_descriptor",
              "url": "/api/classes/structmr_1_1unsynchronized__pool__resource_1_1block__descriptor.html",
              "visibility": "private"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::unsynchronized_pool_resource::chunk_descriptor",
              "kind": "struct",
              "name": "mr::unsynchronized_pool_resource::chunk_descriptor",
              "refid": "structmr_1_1unsynchronized__pool__resource_1_1chunk__descriptor",
              "title": "mr::unsynchronized_pool_resource::chunk_descriptor",
              "url": "/api/classes/structmr_1_1unsynchronized__pool__resource_1_1chunk__descriptor.html",
              "visibility": "private"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::unsynchronized_pool_resource::oversized_block_descriptor",
              "kind": "struct",
              "name": "mr::unsynchronized_pool_resource::oversized_block_descriptor",
              "refid": "structmr_1_1unsynchronized__pool__resource_1_1oversized__block__descriptor",
              "title": "mr::unsynchronized_pool_resource::oversized_block_descriptor",
              "url": "/api/classes/structmr_1_1unsynchronized__pool__resource_1_1oversized__block__descriptor.html",
              "visibility": "private"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "mr::unsynchronized_pool_resource::pool",
              "kind": "struct",
              "name": "mr::unsynchronized_pool_resource::pool",
              "refid": "structmr_1_1unsynchronized__pool__resource_1_1pool",
              "title": "mr::unsynchronized_pool_resource::pool",
              "url": "/api/classes/structmr_1_1unsynchronized__pool__resource_1_1pool.html",
              "visibility": "private"
            }
          ],
          "fullname": "mr::unsynchronized_pool_resource",
          "kind": "class",
          "name": "mr::unsynchronized_pool_resource",
          "refid": "classmr_1_1unsynchronized__pool__resource",
          "title": "mr::unsynchronized_pool_resource",
          "url": "/api/classes/classmr_1_1unsynchronized__pool__resource.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "derivedClasses": [
            {
              "external": false,
              "name": "mr::allocator< T, MR >",
              "refid": "classmr_1_1allocator",
              "url": "/api/classes/classmr_1_1allocator.html",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": false,
              "name": "mr::fancy_pointer_resource< Upstream, Pointer >",
              "refid": "classmr_1_1fancy__pointer__resource",
              "url": "/api/classes/classmr_1_1fancy__pointer__resource.html",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": false,
              "name": "mr::unsynchronized_pool_resource< Upstream >",
              "refid": "classmr_1_1unsynchronized__pool__resource",
              "url": "/api/classes/classmr_1_1unsynchronized__pool__resource.html",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": false,
              "name": "mr::validator2< T, U >",
              "refid": "structmr_1_1validator2",
              "url": "/api/classes/structmr_1_1validator2.html",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": false,
              "name": "mr::validator2< T, U >",
              "refid": "structmr_1_1validator2",
              "url": "/api/classes/structmr_1_1validator2.html",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": false,
              "name": "mr::validator2< T, T >",
              "refid": "structmr_1_1validator2_3_01T_00_01T_01_4",
              "url": "/api/classes/structmr_1_1validator2_3_01t_00_01t_01_4.html",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": false,
              "name": "mr::validator2< Upstream, Bookkeeper >",
              "refid": "structmr_1_1validator2",
              "url": "/api/classes/structmr_1_1validator2.html",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": false,
              "name": "mr::validator2< Upstream, Bookkeeper >",
              "refid": "structmr_1_1validator2",
              "url": "/api/classes/structmr_1_1validator2.html",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "fullname": "mr::validator",
          "kind": "struct",
          "name": "mr::validator",
          "refid": "structmr_1_1validator",
          "title": "mr::validator",
          "url": "/api/classes/structmr_1_1validator.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "mr::validator< T >",
              "virtual": "non-virtual",
              "visibility": "private"
            },
            {
              "external": true,
              "name": "mr::validator< U >",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "category": "classes",
          "derivedClasses": [
            {
              "external": false,
              "name": "mr::disjoint_unsynchronized_pool_resource< Upstream, Bookkeeper >",
              "refid": "classmr_1_1disjoint__unsynchronized__pool__resource",
              "url": "/api/classes/classmr_1_1disjoint__unsynchronized__pool__resource.html",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "fullname": "mr::validator2",
          "kind": "struct",
          "name": "mr::validator2",
          "refid": "structmr_1_1validator2",
          "title": "mr::validator2",
          "url": "/api/classes/structmr_1_1validator2.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "mr::validator< T >",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "category": "classes",
          "fullname": "mr::validator2< T, T >",
          "kind": "struct",
          "name": "mr::validator2< T, T >",
          "refid": "structmr_1_1validator2_3_01T_00_01T_01_4",
          "title": "mr::validator2< T, T >",
          "url": "/api/classes/structmr_1_1validator2_3_01t_00_01t_01_4.html",
          "visibility": "public"
        }
      ],
      "fullname": "mr",
      "kind": "namespace",
      "name": "mr",
      "refid": "namespacemr",
      "summary": "thrust::mr is the namespace containing system agnostic types and functions for memory_resource related functionalities. ",
      "title": "mr",
      "url": "/api/namespaces/namespacemr.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "multiplies",
      "kind": "struct",
      "name": "multiplies",
      "refid": "structmultiplies",
      "title": "multiplies",
      "url": "/api/classes/structmultiplies.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "multiplies< void >",
      "kind": "struct",
      "name": "multiplies< void >",
      "refid": "structmultiplies_3_01void_01_4",
      "title": "multiplies< void >",
      "url": "/api/classes/structmultiplies_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "negate",
      "kind": "struct",
      "name": "negate",
      "refid": "structnegate",
      "title": "negate",
      "url": "/api/classes/structnegate.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "negate< void >",
      "kind": "struct",
      "name": "negate< void >",
      "refid": "structnegate_3_01void_01_4",
      "title": "negate< void >",
      "url": "/api/classes/structnegate_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<a href=\"https://en.cppreference.com/w/cpp/types/integral_constant\"><code>std::integral&#95;constant</code></a> whose value is <code>!Bs</code>. ",
      "category": "classes",
      "fullname": "negation_value",
      "kind": "struct",
      "name": "negation_value",
      "refid": "structnegation__value",
      "summary": "std::integral_constant whose value is !Bs. ",
      "title": "negation_value",
      "url": "/api/classes/structnegation__value.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "new_stream_t",
      "kind": "struct",
      "name": "new_stream_t",
      "refid": "structnew__stream__t",
      "title": "new_stream_t",
      "url": "/api/classes/structnew__stream__t.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "not_equal_to",
      "kind": "struct",
      "name": "not_equal_to",
      "refid": "structnot__equal__to",
      "title": "not_equal_to",
      "url": "/api/classes/structnot__equal__to.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "not_equal_to< void >",
      "kind": "struct",
      "name": "not_equal_to< void >",
      "refid": "structnot__equal__to_3_01void_01_4",
      "title": "not_equal_to< void >",
      "url": "/api/classes/structnot__equal__to_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "A tag type to represent an empty optional. ",
      "category": "classes",
      "children": [
        {
          "anchor": "",
          "category": "classes",
          "fullname": "nullopt_t::do_not_use",
          "kind": "struct",
          "name": "nullopt_t::do_not_use",
          "refid": "structnullopt__t_1_1do__not__use",
          "title": "nullopt_t::do_not_use",
          "url": "/api/classes/structnullopt__t_1_1do__not__use.html",
          "visibility": "public"
        }
      ],
      "fullname": "nullopt_t",
      "kind": "struct",
      "name": "nullopt_t",
      "refid": "structnullopt__t",
      "summary": "A tag type to represent an empty optional. ",
      "title": "nullopt_t",
      "url": "/api/classes/structnullopt__t.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "std::numeric_limits< T >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "numeric_limits",
      "kind": "struct",
      "name": "numeric_limits",
      "refid": "structnumeric__limits",
      "title": "numeric_limits",
      "url": "/api/classes/structnumeric__limits.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "omp",
      "kind": "namespace",
      "name": "omp",
      "refid": "namespaceomp",
      "title": "omp",
      "url": "/api/namespaces/namespaceomp.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "An optional object is an object that contains the storage for another object and manages the lifetime of this contained object, if any. ",
      "category": "classes",
      "fullname": "optional",
      "kind": "class",
      "name": "optional",
      "refid": "classoptional",
      "summary": "An optional object is an object that contains the storage for another object and manages the lifetime of this contained object, if any. ",
      "title": "optional",
      "url": "/api/classes/classoptional.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "Specialization for when <code>T</code> is a reference. ",
      "category": "classes",
      "fullname": "optional< T & >",
      "kind": "class",
      "name": "optional< T & >",
      "refid": "classoptional_3_01T_01_6_01_4",
      "summary": "Specialization for when T is a reference. ",
      "title": "optional< T & >",
      "url": "/api/classes/classoptional_3_01t_01_6_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::detail::iterator_category_with_system_and_traversal< std::output_iterator_tag, thrust::device_system_tag, thrust::single_pass_traversal_tag >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "output_device_iterator_tag",
      "kind": "struct",
      "name": "output_device_iterator_tag",
      "refid": "structoutput__device__iterator__tag",
      "title": "output_device_iterator_tag",
      "url": "/api/classes/structoutput__device__iterator__tag.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "pair",
      "kind": "struct",
      "name": "pair",
      "refid": "structpair",
      "title": "pair",
      "url": "/api/classes/structpair.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::mr::allocator< T, Upstream >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "children": [
        {
          "anchor": "",
          "category": "classes",
          "fullname": "per_device_allocator::rebind",
          "kind": "struct",
          "name": "per_device_allocator::rebind",
          "refid": "structper__device__allocator_1_1rebind",
          "title": "per_device_allocator::rebind",
          "url": "/api/classes/structper__device__allocator_1_1rebind.html",
          "visibility": "public"
        }
      ],
      "fullname": "per_device_allocator",
      "kind": "class",
      "name": "per_device_allocator",
      "refid": "classper__device__allocator",
      "title": "per_device_allocator",
      "url": "/api/classes/classper__device__allocator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::detail::permutation_iterator_base::type< ElementIterator, IndexIterator >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "permutation_iterator",
      "kind": "class",
      "name": "permutation_iterator",
      "refid": "classpermutation__iterator",
      "title": "permutation_iterator",
      "url": "/api/classes/classpermutation__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "placeholders",
      "kind": "namespace",
      "name": "placeholders",
      "refid": "namespaceplaceholders",
      "title": "placeholders",
      "url": "/api/namespaces/namespaceplaceholders.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "plus",
      "kind": "struct",
      "name": "plus",
      "refid": "structplus",
      "title": "plus",
      "url": "/api/classes/structplus.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "plus< void >",
      "kind": "struct",
      "name": "plus< void >",
      "refid": "structplus_3_01void_01_4",
      "title": "plus< void >",
      "url": "/api/classes/structplus_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "false_type",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "brief": "Customization point that can be customized to indicate that an iterator type <code>Iterator</code> satisfies <a href=\"https://en.cppreference.com/w/cpp/named_req/ContiguousIterator\">ContiguousIterator</a>, aka it points to elements that are contiguous in memory. ",
      "category": "classes",
      "fullname": "proclaim_contiguous_iterator",
      "kind": "struct",
      "name": "proclaim_contiguous_iterator",
      "refid": "structproclaim__contiguous__iterator",
      "summary": "Customization point that can be customized to indicate that an iterator type Iterator satisfies ContiguousIterator, aka it points to elements that are contiguous in memory. ",
      "title": "proclaim_contiguous_iterator",
      "url": "/api/classes/structproclaim__contiguous__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "false_type",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "brief": "<a href=\"http://eel.is/c++draft/namespace.std#def:customization_point\">_customization point_</a> that can be specialized customized to indicate that a type <code>T</code> is <a href=\"https://wg21.link/P1144\">_TriviallyRelocatable_</a>, aka it can be bitwise copied with a facility like <a href=\"https://en.cppreference.com/w/cpp/string/byte/memcpy\"><code>std::memcpy</code></a>. ",
      "category": "classes",
      "fullname": "proclaim_trivially_relocatable",
      "kind": "struct",
      "name": "proclaim_trivially_relocatable",
      "refid": "structproclaim__trivially__relocatable",
      "summary": "customization point that can be specialized customized to indicate that a type T is TriviallyRelocatable, aka it can be bitwise copied with a facility like std::memcpy. ",
      "title": "proclaim_trivially_relocatable",
      "url": "/api/classes/structproclaim__trivially__relocatable.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "project1st",
      "kind": "struct",
      "name": "project1st",
      "refid": "structproject1st",
      "title": "project1st",
      "url": "/api/classes/structproject1st.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "project1st< void, void >",
      "kind": "struct",
      "name": "project1st< void, void >",
      "refid": "structproject1st_3_01void_00_01void_01_4",
      "title": "project1st< void, void >",
      "url": "/api/classes/structproject1st_3_01void_00_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "project2nd",
      "kind": "struct",
      "name": "project2nd",
      "refid": "structproject2nd",
      "title": "project2nd",
      "url": "/api/classes/structproject2nd.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "project2nd< void, void >",
      "kind": "struct",
      "name": "project2nd< void, void >",
      "refid": "structproject2nd_3_01void_00_01void_01_4",
      "title": "project2nd< void, void >",
      "url": "/api/classes/structproject2nd_3_01void_00_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "brief": "A <code>discard&#95;block&#95;engine</code> adapts an existing base random number engine and produces random values by discarding some of the values returned by its base engine. Each cycle of the compound engine begins by returning <code>r</code> values successively produced by the base engine and ends by discarding <code>p-r</code> such values. The engine's state is the state of its base engine followed by the number of calls to <code>operator()</code> that have occurred since the beginning of the current cycle. ",
          "category": "classes",
          "fullname": "random::discard_block_engine",
          "kind": "class",
          "name": "random::discard_block_engine",
          "refid": "classrandom_1_1discard__block__engine",
          "summary": "A discard_block_engine adapts an existing base random number engine and produces random values by discarding some of the values returned by its base engine. Each cycle of the compound engine begins by returning r values successively produced by the base engine and ends by discarding p-r such values. The engine's state is the state of its base engine followed by the number of calls to operator() that have occurred since the beginning of the current cycle. ",
          "title": "random::discard_block_engine",
          "url": "/api/classes/classrandom_1_1discard__block__engine.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "A <code>linear&#95;congruential&#95;engine</code> random number engine produces unsigned integer random numbers using a linear congruential random number generation algorithm. ",
          "category": "classes",
          "fullname": "random::linear_congruential_engine",
          "kind": "class",
          "name": "random::linear_congruential_engine",
          "refid": "classrandom_1_1linear__congruential__engine",
          "summary": "A linear_congruential_engine random number engine produces unsigned integer random numbers using a linear congruential random number generation algorithm. ",
          "title": "random::linear_congruential_engine",
          "url": "/api/classes/classrandom_1_1linear__congruential__engine.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "A <code>linear&#95;feedback&#95;shift&#95;engine</code> random number engine produces unsigned integer random values using a linear feedback shift random number generation algorithm. ",
          "category": "classes",
          "fullname": "random::linear_feedback_shift_engine",
          "kind": "class",
          "name": "random::linear_feedback_shift_engine",
          "refid": "classrandom_1_1linear__feedback__shift__engine",
          "summary": "A linear_feedback_shift_engine random number engine produces unsigned integer random values using a linear feedback shift random number generation algorithm. ",
          "title": "random::linear_feedback_shift_engine",
          "url": "/api/classes/classrandom_1_1linear__feedback__shift__engine.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "detail::normal_distribution_base::type< double >",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "brief": "A <code>normal&#95;distribution</code> random number distribution produces floating point Normally distributed random numbers. ",
          "category": "classes",
          "fullname": "random::normal_distribution",
          "kind": "class",
          "name": "random::normal_distribution",
          "refid": "classrandom_1_1normal__distribution",
          "summary": "A normal_distribution random number distribution produces floating point Normally distributed random numbers. ",
          "title": "random::normal_distribution",
          "url": "/api/classes/classrandom_1_1normal__distribution.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "A <code>subtract&#95;with&#95;carry&#95;engine</code> random number engine produces unsigned integer random numbers using the subtract with carry algorithm of Marsaglia & Zaman. ",
          "category": "classes",
          "fullname": "random::subtract_with_carry_engine",
          "kind": "class",
          "name": "random::subtract_with_carry_engine",
          "refid": "classrandom_1_1subtract__with__carry__engine",
          "summary": "A subtract_with_carry_engine random number engine produces unsigned integer random numbers using the subtract with carry algorithm of Marsaglia & Zaman. ",
          "title": "random::subtract_with_carry_engine",
          "url": "/api/classes/classrandom_1_1subtract__with__carry__engine.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "A <code>uniform&#95;int&#95;distribution</code> random number distribution produces signed or unsigned integer uniform random numbers from a given range. ",
          "category": "classes",
          "fullname": "random::uniform_int_distribution",
          "kind": "class",
          "name": "random::uniform_int_distribution",
          "refid": "classrandom_1_1uniform__int__distribution",
          "summary": "A uniform_int_distribution random number distribution produces signed or unsigned integer uniform random numbers from a given range. ",
          "title": "random::uniform_int_distribution",
          "url": "/api/classes/classrandom_1_1uniform__int__distribution.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "A <code>uniform&#95;real&#95;distribution</code> random number distribution produces floating point uniform random numbers from a half-open interval. ",
          "category": "classes",
          "fullname": "random::uniform_real_distribution",
          "kind": "class",
          "name": "random::uniform_real_distribution",
          "refid": "classrandom_1_1uniform__real__distribution",
          "summary": "A uniform_real_distribution random number distribution produces floating point uniform random numbers from a half-open interval. ",
          "title": "random::uniform_real_distribution",
          "url": "/api/classes/classrandom_1_1uniform__real__distribution.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "An <code>xor&#95;combine&#95;engine</code> adapts two existing base random number engines and produces random values by combining the values produced by each. ",
          "category": "classes",
          "fullname": "random::xor_combine_engine",
          "kind": "class",
          "name": "random::xor_combine_engine",
          "refid": "classrandom_1_1xor__combine__engine",
          "summary": "An xor_combine_engine adapts two existing base random number engines and produces random values by combining the values produced by each. ",
          "title": "random::xor_combine_engine",
          "url": "/api/classes/classrandom_1_1xor__combine__engine.html",
          "visibility": "public"
        }
      ],
      "fullname": "random",
      "kind": "namespace",
      "name": "random",
      "refid": "namespacerandom",
      "title": "random",
      "url": "/api/namespaces/namespacerandom.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::detail::iterator_category_with_system_and_traversal< std::random_access_iterator_tag, thrust::device_system_tag, thrust::random_access_traversal_tag >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "random_access_device_iterator_tag",
      "kind": "struct",
      "name": "random_access_device_iterator_tag",
      "refid": "structrandom__access__device__iterator__tag",
      "title": "random_access_device_iterator_tag",
      "url": "/api/classes/structrandom__access__device__iterator__tag.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<a href=\"https://en.cppreference.com/w/cpp/named_req/UnaryTypeTrait\">_UnaryTypeTrait_</a> that removes <a href=\"https://en.cppreference.com/w/cpp/language/cv\">const-volatile qualifiers</a> and <a href=\"https://en.cppreference.com/w/cpp/language/reference\">references</a> from <code>T</code>. Equivalent to <code>remove&#95;cv&#95;t&lt;remove&#95;reference&#95;t&lt;T&gt;&gt;</code>. ",
      "category": "classes",
      "fullname": "remove_cvref",
      "kind": "struct",
      "name": "remove_cvref",
      "refid": "structremove__cvref",
      "summary": "UnaryTypeTrait that removes const-volatile qualifiers and references from T. Equivalent to remove_cv_t<remove_reference_t<T>>. ",
      "title": "remove_cvref",
      "url": "/api/classes/structremove__cvref.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::reverse_iterator_base::type< BidirectionalIterator >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "reverse_iterator",
      "kind": "class",
      "name": "reverse_iterator",
      "refid": "classreverse__iterator",
      "title": "reverse_iterator",
      "url": "/api/classes/classreverse__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "square",
      "kind": "struct",
      "name": "square",
      "refid": "structsquare",
      "title": "square",
      "url": "/api/classes/structsquare.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "square< void >",
      "kind": "struct",
      "name": "square< void >",
      "refid": "structsquare_3_01void_01_4",
      "title": "square< void >",
      "url": "/api/classes/structsquare_3_01void_01_4.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "category": "classes",
          "fullname": "std::hash< THRUST_NS_QUALIFIER::optional< T > >",
          "kind": "struct",
          "name": "std::hash< THRUST_NS_QUALIFIER::optional< T > >",
          "refid": "structstd_1_1hash_3_01THRUST__NS__QUALIFIER_1_1optional_3_01T_01_4_01_4",
          "title": "std::hash< THRUST_NS_QUALIFIER::optional< T > >",
          "url": "/api/classes/structstd_1_1hash_3_01thrust__ns__qualifier_1_1optional_3_01t_01_4_01_4.html",
          "visibility": "public"
        }
      ],
      "fullname": "std",
      "kind": "namespace",
      "name": "std",
      "refid": "namespacestd",
      "title": "std",
      "url": "/api/namespaces/namespacestd.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "category": "namespaces",
          "fullname": "system::cpp",
          "kind": "namespace",
          "name": "system::cpp",
          "refid": "namespacesystem_1_1cpp",
          "title": "system::cpp",
          "url": "/api/namespaces/namespacesystem_1_1cpp.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "namespaces",
          "children": [
            {
              "anchor": "",
              "category": "namespaces",
              "fullname": "system::cuda::errc",
              "kind": "namespace",
              "name": "system::cuda::errc",
              "refid": "namespacesystem_1_1cuda_1_1errc",
              "title": "system::cuda::errc",
              "url": "/api/namespaces/namespacesystem_1_1cuda_1_1errc.html",
              "visibility": "public"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "system::cuda::ready_future",
              "kind": "struct",
              "name": "system::cuda::ready_future",
              "refid": "structsystem_1_1cuda_1_1ready__future",
              "title": "system::cuda::ready_future",
              "url": "/api/classes/structsystem_1_1cuda_1_1ready__future.html",
              "visibility": "public"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "system::cuda::unique_eager_future",
              "kind": "struct",
              "name": "system::cuda::unique_eager_future",
              "refid": "structsystem_1_1cuda_1_1unique__eager__future",
              "title": "system::cuda::unique_eager_future",
              "url": "/api/classes/structsystem_1_1cuda_1_1unique__eager__future.html",
              "visibility": "public"
            }
          ],
          "fullname": "system::cuda",
          "kind": "namespace",
          "name": "system::cuda",
          "refid": "namespacesystem_1_1cuda",
          "title": "system::cuda",
          "url": "/api/namespaces/namespacesystem_1_1cuda.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "namespaces",
          "fullname": "system::errc",
          "kind": "namespace",
          "name": "system::errc",
          "refid": "namespacesystem_1_1errc",
          "title": "system::errc",
          "url": "/api/namespaces/namespacesystem_1_1errc.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "The class <code>error&#95;category</code> serves as a base class for types used to identify the source and encoding of a particular category of error code. Classes may be derived from <code>error&#95;category</code> to support categories of errors in addition to those defined in the C++ International Standard. ",
          "category": "classes",
          "fullname": "system::error_category",
          "kind": "class",
          "name": "system::error_category",
          "refid": "classsystem_1_1error__category",
          "summary": "The class error_category serves as a base class for types used to identify the source and encoding of a particular category of error code. Classes may be derived from error_category to support categories of errors in addition to those defined in the C++ International Standard. ",
          "title": "system::error_category",
          "url": "/api/classes/classsystem_1_1error__category.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "The class <code>error&#95;code</code> describes an object used to hold error code values, such as those originating from the operating system or other low-level application program interfaces. ",
          "category": "classes",
          "fullname": "system::error_code",
          "kind": "class",
          "name": "system::error_code",
          "refid": "classsystem_1_1error__code",
          "summary": "The class error_code describes an object used to hold error code values, such as those originating from the operating system or other low-level application program interfaces. ",
          "title": "system::error_code",
          "url": "/api/classes/classsystem_1_1error__code.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "The class <code>error&#95;condition</code> describes an object used to hold values identifying error conditions. ",
          "category": "classes",
          "fullname": "system::error_condition",
          "kind": "class",
          "name": "system::error_condition",
          "refid": "classsystem_1_1error__condition",
          "summary": "The class error_condition describes an object used to hold values identifying error conditions. ",
          "title": "system::error_condition",
          "url": "/api/classes/classsystem_1_1error__condition.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "false_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "system::is_error_code_enum",
          "kind": "struct",
          "name": "system::is_error_code_enum",
          "refid": "structsystem_1_1is__error__code__enum",
          "title": "system::is_error_code_enum",
          "url": "/api/classes/structsystem_1_1is__error__code__enum.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "true_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "system::is_error_code_enum< cuda::errc::errc_t >",
          "kind": "struct",
          "name": "system::is_error_code_enum< cuda::errc::errc_t >",
          "refid": "structsystem_1_1is__error__code__enum_3_01cuda_1_1errc_1_1errc__t_01_4",
          "title": "system::is_error_code_enum< cuda::errc::errc_t >",
          "url": "/api/classes/structsystem_1_1is__error__code__enum_3_01cuda_1_1errc_1_1errc__t_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "false_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "system::is_error_condition_enum",
          "kind": "struct",
          "name": "system::is_error_condition_enum",
          "refid": "structsystem_1_1is__error__condition__enum",
          "title": "system::is_error_condition_enum",
          "url": "/api/classes/structsystem_1_1is__error__condition__enum.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "true_type",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "category": "classes",
          "fullname": "system::is_error_condition_enum< errc::errc_t >",
          "kind": "struct",
          "name": "system::is_error_condition_enum< errc::errc_t >",
          "refid": "structsystem_1_1is__error__condition__enum_3_01errc_1_1errc__t_01_4",
          "title": "system::is_error_condition_enum< errc::errc_t >",
          "url": "/api/classes/structsystem_1_1is__error__condition__enum_3_01errc_1_1errc__t_01_4.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "namespaces",
          "fullname": "system::omp",
          "kind": "namespace",
          "name": "system::omp",
          "refid": "namespacesystem_1_1omp",
          "title": "system::omp",
          "url": "/api/namespaces/namespacesystem_1_1omp.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": true,
              "name": "runtime_error",
              "virtual": "non-virtual",
              "visibility": "public"
            }
          ],
          "brief": "The class <code>system&#95;error</code> describes an exception object used to report error conditions that have an associated <code><a href=\"/api/classes/classsystem_1_1error__code.html\">error&#95;code</a></code>. Such error conditions typically originate from the operating system or other low-level application program interfaces. ",
          "category": "classes",
          "fullname": "system::system_error",
          "kind": "class",
          "name": "system::system_error",
          "refid": "classsystem_1_1system__error",
          "summary": "The class system_error describes an exception object used to report error conditions that have an associated error_code. Such error conditions typically originate from the operating system or other low-level application program interfaces. ",
          "title": "system::system_error",
          "url": "/api/classes/classsystem_1_1system__error.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "namespaces",
          "fullname": "system::tbb",
          "kind": "namespace",
          "name": "system::tbb",
          "refid": "namespacesystem_1_1tbb",
          "title": "system::tbb",
          "url": "/api/namespaces/namespacesystem_1_1tbb.html",
          "visibility": "public"
        }
      ],
      "fullname": "system",
      "kind": "namespace",
      "name": "system",
      "refid": "namespacesystem",
      "title": "system",
      "url": "/api/namespaces/namespacesystem.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "Lambda",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "tagged_deleter",
      "kind": "struct",
      "name": "tagged_deleter",
      "refid": "structtagged__deleter",
      "title": "tagged_deleter",
      "url": "/api/classes/structtagged__deleter.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "tbb",
      "kind": "namespace",
      "name": "tbb",
      "refid": "namespacetbb",
      "title": "tbb",
      "url": "/api/namespaces/namespacetbb.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "brief": "<code>thrust::cpp</code> is a top-level alias for thrust::system::cpp. ",
          "category": "namespaces",
          "fullname": "thrust::cpp",
          "kind": "namespace",
          "name": "thrust::cpp",
          "refid": "namespacethrust_1_1cpp",
          "summary": "thrust::cpp is a top-level alias for thrust::system::cpp. ",
          "title": "thrust::cpp",
          "url": "/api/namespaces/namespacethrust_1_1cpp.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>thrust::cuda</code> is a top-level alias for <code>thrust::system::cuda</code>. ",
          "category": "namespaces",
          "fullname": "thrust::cuda",
          "kind": "namespace",
          "name": "thrust::cuda",
          "refid": "namespacethrust_1_1cuda",
          "summary": "thrust::cuda is a top-level alias for thrust::system::cuda. ",
          "title": "thrust::cuda",
          "url": "/api/namespaces/namespacethrust_1_1cuda.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>thrust::omp</code> is a top-level alias for thrust::system::omp. ",
          "category": "namespaces",
          "fullname": "thrust::omp",
          "kind": "namespace",
          "name": "thrust::omp",
          "refid": "namespacethrust_1_1omp",
          "summary": "thrust::omp is a top-level alias for thrust::system::omp. ",
          "title": "thrust::omp",
          "url": "/api/namespaces/namespacethrust_1_1omp.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "Facilities for constructing simple functions inline. ",
          "category": "namespaces",
          "fullname": "thrust::placeholders",
          "kind": "namespace",
          "name": "thrust::placeholders",
          "refid": "namespacethrust_1_1placeholders",
          "summary": "Facilities for constructing simple functions inline. ",
          "title": "thrust::placeholders",
          "url": "/api/namespaces/namespacethrust_1_1placeholders.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>thrust::random</code> is the namespace which contains random number engine class templates, random number engine adaptor class templates, engines with predefined parameters, and random number distribution class templates. They are provided in a separate namespace for import convenience but are also aliased in the top-level <code>thrust</code> namespace for easy access. ",
          "category": "namespaces",
          "fullname": "thrust::random",
          "kind": "namespace",
          "name": "thrust::random",
          "refid": "namespacethrust_1_1random",
          "summary": "thrust::random is the namespace which contains random number engine class templates, random number engine adaptor class templates, engines with predefined parameters, and random number distribution class templates. They are provided in a separate namespace for import convenience but are also aliased in the top-level thrust namespace for easy access. ",
          "title": "thrust::random",
          "url": "/api/namespaces/namespacethrust_1_1random.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>thrust::system</code> is the namespace which contains specific Thrust backend systems. It also contains functionality for reporting error conditions originating from the operating system or other low-level application program interfaces such as the CUDA runtime. They are provided in a separate namespace for import convenience but are also aliased in the top-level <code>thrust</code> namespace for easy access. ",
          "category": "namespaces",
          "children": [
            {
              "anchor": "",
              "brief": "<code>thrust::system::cuda</code> is the namespace containing functionality for allocating, manipulating, and deallocating memory available to Thrust's CUDA backend system. The identifiers are provided in a separate namespace underneath <code><a href=\"/api/namespaces/namespacethrust_1_1system.html\">thrust::system</a></code> for import convenience but are also aliased in the top-level <code><a href=\"/api/namespaces/namespacethrust_1_1cuda.html\">thrust::cuda</a></code> namespace for easy access. ",
              "category": "namespaces",
              "fullname": "thrust::system::cuda",
              "kind": "namespace",
              "name": "thrust::system::cuda",
              "refid": "namespacethrust_1_1system_1_1cuda",
              "summary": "thrust::system::cuda is the namespace containing functionality for allocating, manipulating, and deallocating memory available to Thrust's CUDA backend system. The identifiers are provided in a separate namespace underneath thrust::system for import convenience but are also aliased in the top-level thrust::cuda namespace for easy access. ",
              "title": "thrust::system::cuda",
              "url": "/api/namespaces/namespacethrust_1_1system_1_1cuda.html",
              "visibility": "public"
            }
          ],
          "fullname": "thrust::system",
          "kind": "namespace",
          "name": "thrust::system",
          "refid": "namespacethrust_1_1system",
          "summary": "thrust::system is the namespace which contains specific Thrust backend systems. It also contains functionality for reporting error conditions originating from the operating system or other low-level application program interfaces such as the CUDA runtime. They are provided in a separate namespace for import convenience but are also aliased in the top-level thrust namespace for easy access. ",
          "title": "thrust::system",
          "url": "/api/namespaces/namespacethrust_1_1system.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>thrust::tbb</code> is a top-level alias for thrust::system::tbb. ",
          "category": "namespaces",
          "fullname": "thrust::tbb",
          "kind": "namespace",
          "name": "thrust::tbb",
          "refid": "namespacethrust_1_1tbb",
          "summary": "thrust::tbb is a top-level alias for thrust::system::tbb. ",
          "title": "thrust::tbb",
          "url": "/api/namespaces/namespacethrust_1_1tbb.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>test&#95;class</code> is a class intended to exercise and test Doxybook rendering. ",
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "thrust::test_class::test_nested_struct",
              "kind": "struct",
              "name": "thrust::test_class::test_nested_struct",
              "refid": "structthrust_1_1test__class_1_1test__nested__struct",
              "title": "thrust::test_class::test_nested_struct",
              "url": "/api/classes/structthrust_1_1test__class_1_1test__nested__struct.html",
              "visibility": "public"
            },
            {
              "anchor": "",
              "category": "classes",
              "fullname": "thrust::test_class::test_protected_nested_class",
              "kind": "class",
              "name": "thrust::test_class::test_protected_nested_class",
              "refid": "classthrust_1_1test__class_1_1test__protected__nested__class",
              "title": "thrust::test_class::test_protected_nested_class",
              "url": "/api/classes/classthrust_1_1test__class_1_1test__protected__nested__class.html",
              "visibility": "protected"
            }
          ],
          "fullname": "thrust::test_class",
          "kind": "class",
          "name": "thrust::test_class",
          "refid": "classthrust_1_1test__class",
          "summary": "test_class is a class intended to exercise and test Doxybook rendering. ",
          "title": "thrust::test_class",
          "url": "/api/classes/classthrust_1_1test__class.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "baseClasses": [
            {
              "external": false,
              "name": "thrust::test_class< int, double >",
              "refid": "classthrust_1_1test__class",
              "url": "/api/classes/classthrust_1_1test__class.html",
              "virtual": "non-virtual",
              "visibility": "private"
            }
          ],
          "brief": "<code>test&#95;derived&#95;class</code> is a derived class intended to exercise and test Doxybook rendering. ",
          "category": "classes",
          "children": [
            {
              "anchor": "",
              "category": "classes",
              "fullname": "thrust::test_derived_class::test_derived_nested_struct",
              "kind": "struct",
              "name": "thrust::test_derived_class::test_derived_nested_struct",
              "refid": "structthrust_1_1test__derived__class_1_1test__derived__nested__struct",
              "title": "thrust::test_derived_class::test_derived_nested_struct",
              "url": "/api/classes/structthrust_1_1test__derived__class_1_1test__derived__nested__struct.html",
              "visibility": "private"
            }
          ],
          "fullname": "thrust::test_derived_class",
          "kind": "class",
          "name": "thrust::test_derived_class",
          "refid": "classthrust_1_1test__derived__class",
          "summary": "test_derived_class is a derived class intended to exercise and test Doxybook rendering. ",
          "title": "thrust::test_derived_class",
          "url": "/api/classes/classthrust_1_1test__derived__class.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>test&#95;namespace</code> is a namespace intended to exercise and test Doxybook rendering. ",
          "category": "namespaces",
          "children": [
            {
              "anchor": "",
              "brief": "<code>test&#95;struct</code> is a struct intended to exercise and test Doxybook rendering. ",
              "category": "classes",
              "fullname": "thrust::test_namespace::test_struct",
              "kind": "struct",
              "name": "thrust::test_namespace::test_struct",
              "refid": "structthrust_1_1test__namespace_1_1test__struct",
              "summary": "test_struct is a struct intended to exercise and test Doxybook rendering. ",
              "title": "thrust::test_namespace::test_struct",
              "url": "/api/classes/structthrust_1_1test__namespace_1_1test__struct.html",
              "visibility": "public"
            }
          ],
          "fullname": "thrust::test_namespace",
          "kind": "namespace",
          "name": "thrust::test_namespace",
          "refid": "namespacethrust_1_1test__namespace",
          "summary": "test_namespace is a namespace intended to exercise and test Doxybook rendering. ",
          "title": "thrust::test_namespace",
          "url": "/api/namespaces/namespacethrust_1_1test__namespace.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "brief": "<code>test&#95;predefined&#95;friend&#95;struct</code> is a class intended to exercise and test Doxybook rendering. ",
          "category": "classes",
          "fullname": "thrust::test_predefined_friend_struct",
          "kind": "struct",
          "name": "thrust::test_predefined_friend_struct",
          "refid": "structthrust_1_1test__predefined__friend__struct",
          "summary": "test_predefined_friend_struct is a class intended to exercise and test Doxybook rendering. ",
          "title": "thrust::test_predefined_friend_struct",
          "url": "/api/classes/structthrust_1_1test__predefined__friend__struct.html",
          "visibility": "public"
        }
      ],
      "fullname": "thrust",
      "kind": "namespace",
      "name": "thrust",
      "refid": "namespacethrust",
      "title": "thrust",
      "url": "/api/namespaces/namespacethrust.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::transform_input_output_iterator_base::type< InputFunction, OutputFunction, Iterator >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "transform_input_output_iterator",
      "kind": "class",
      "name": "transform_input_output_iterator",
      "refid": "classtransform__input__output__iterator",
      "title": "transform_input_output_iterator",
      "url": "/api/classes/classtransform__input__output__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::transform_iterator_base::type< AdaptableUnaryFunction, Iterator, use_default, use_default >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "transform_iterator",
      "kind": "class",
      "name": "transform_iterator",
      "refid": "classtransform__iterator",
      "title": "transform_iterator",
      "url": "/api/classes/classtransform__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::transform_output_iterator_base::type< UnaryFunction, OutputIterator >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "transform_output_iterator",
      "kind": "class",
      "name": "transform_output_iterator",
      "refid": "classtransform__output__iterator",
      "title": "transform_output_iterator",
      "url": "/api/classes/classtransform__output__iterator.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "brief": "<code>tuple</code> is a class template that can be instantiated with up to ten arguments. Each template argument specifies the type of element in the <code>tuple</code>. Consequently, tuples are heterogeneous, fixed-size collections of values. An instantiation of <code>tuple</code> with two arguments is similar to an instantiation of <code>pair</code> with the same two arguments. Individual elements of a <code>tuple</code> may be accessed with the <code>get</code> function. ",
      "category": "classes",
      "fullname": "tuple",
      "kind": "class",
      "name": "tuple",
      "refid": "classtuple",
      "summary": "tuple is a class template that can be instantiated with up to ten arguments. Each template argument specifies the type of element in the tuple. Consequently, tuples are heterogeneous, fixed-size collections of values. An instantiation of tuple with two arguments is similar to an instantiation of pair with the same two arguments. Individual elements of a tuple may be accessed with the get function. ",
      "title": "tuple",
      "url": "/api/classes/classtuple.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "tuple_element",
      "kind": "struct",
      "name": "tuple_element",
      "refid": "structtuple__element",
      "title": "tuple_element",
      "url": "/api/classes/structtuple__element.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "tuple_size",
      "kind": "struct",
      "name": "tuple_size",
      "refid": "structtuple__size",
      "title": "tuple_size",
      "url": "/api/classes/structtuple__size.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "unary_function",
      "kind": "struct",
      "name": "unary_function",
      "refid": "structunary__function",
      "title": "unary_function",
      "url": "/api/classes/structunary__function.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "thrust::unary_function< Predicate::argument_type, bool >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "unary_negate",
      "kind": "struct",
      "name": "unary_negate",
      "refid": "structunary__negate",
      "title": "unary_negate",
      "url": "/api/classes/structunary__negate.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "unary_traits",
      "kind": "struct",
      "name": "unary_traits",
      "refid": "structunary__traits",
      "title": "unary_traits",
      "url": "/api/classes/structunary__traits.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "children": [
        {
          "anchor": "",
          "category": "classes",
          "fullname": "unimplemented::no_unique_eager_event_type_found",
          "kind": "struct",
          "name": "unimplemented::no_unique_eager_event_type_found",
          "refid": "structunimplemented_1_1no__unique__eager__event__type__found",
          "title": "unimplemented::no_unique_eager_event_type_found",
          "url": "/api/classes/structunimplemented_1_1no__unique__eager__event__type__found.html",
          "visibility": "public"
        },
        {
          "anchor": "",
          "category": "classes",
          "fullname": "unimplemented::no_unique_eager_future_type_found",
          "kind": "struct",
          "name": "unimplemented::no_unique_eager_future_type_found",
          "refid": "structunimplemented_1_1no__unique__eager__future__type__found",
          "title": "unimplemented::no_unique_eager_future_type_found",
          "url": "/api/classes/structunimplemented_1_1no__unique__eager__future__type__found.html",
          "visibility": "public"
        }
      ],
      "fullname": "unimplemented",
      "kind": "namespace",
      "name": "unimplemented",
      "refid": "namespaceunimplemented",
      "title": "unimplemented",
      "url": "/api/namespaces/namespaceunimplemented.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "unique_eager_event_type_detail",
      "kind": "namespace",
      "name": "unique_eager_event_type_detail",
      "refid": "namespaceunique__eager__event__type__detail",
      "title": "unique_eager_event_type_detail",
      "url": "/api/namespaces/namespaceunique__eager__event__type__detail.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "namespaces",
      "fullname": "unique_eager_future_type_detail",
      "kind": "namespace",
      "name": "unique_eager_future_type_detail",
      "refid": "namespaceunique__eager__future__type__detail",
      "title": "unique_eager_future_type_detail",
      "url": "/api/namespaces/namespaceunique__eager__future__type__detail.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "voider",
      "kind": "struct",
      "name": "voider",
      "refid": "structvoider",
      "title": "voider",
      "url": "/api/classes/structvoider.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "category": "classes",
      "fullname": "zip_function",
      "kind": "class",
      "name": "zip_function",
      "refid": "classzip__function",
      "title": "zip_function",
      "url": "/api/classes/classzip__function.html",
      "visibility": "public"
    },
    {
      "anchor": "",
      "baseClasses": [
        {
          "external": true,
          "name": "detail::zip_iterator_base::type< IteratorTuple >",
          "virtual": "non-virtual",
          "visibility": "public"
        }
      ],
      "category": "classes",
      "fullname": "zip_iterator",
      "kind": "class",
      "name": "zip_iterator",
      "refid": "classzip__iterator",
      "title": "zip_iterator",
      "url": "/api/classes/classzip__iterator.html",
      "visibility": "public"
    }
  ],
  "name": "Classes",
  "title": "Classes"
}